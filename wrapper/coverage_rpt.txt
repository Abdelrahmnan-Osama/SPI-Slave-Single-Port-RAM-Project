Coverage Report by instance with details

=================================================================================
=== Instance: /top/wif
=== Design Unit: work.wrapper_if
=================================================================================
Toggle Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Toggles                         10        10         0   100.00%

================================Toggle Details================================

Toggle Coverage for instance /top/wif --

                                              Node      1H->0L      0L->1H                          "Coverage"
                                              ---------------------------------------------------------------
                                              MISO           1           1                              100.00 
                                              MOSI           1           1                              100.00 
                                              SS_n           1           1                              100.00 
                                               clk           1           1                              100.00 
                                             rst_n           1           1                              100.00 

Total Node Count     =          5 
Toggled Node Count   =          5 
Untoggled Node Count =          0 

Toggle Coverage      =     100.00% (10 of 10 bins)

=================================================================================
=== Instance: /top/ramif
=== Design Unit: work.ram_if
=================================================================================
Toggle Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Toggles                         44        44         0   100.00%

================================Toggle Details================================

Toggle Coverage for instance /top/ramif --

                                              Node      1H->0L      0L->1H                          "Coverage"
                                              ---------------------------------------------------------------
                                               clk           1           1                              100.00 
                                          din[9-0]           1           1                              100.00 
                                         dout[7-0]           1           1                              100.00 
                                             rst_n           1           1                              100.00 
                                          rx_valid           1           1                              100.00 
                                          tx_valid           1           1                              100.00 

Total Node Count     =         22 
Toggled Node Count   =         22 
Untoggled Node Count =          0 

Toggle Coverage      =     100.00% (44 of 44 bins)

=================================================================================
=== Instance: /top/slaveif
=== Design Unit: work.slave_if
=================================================================================
Toggle Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Toggles                         52        52         0   100.00%

================================Toggle Details================================

Toggle Coverage for instance /top/slaveif --

                                              Node      1H->0L      0L->1H                          "Coverage"
                                              ---------------------------------------------------------------
                                              MISO           1           1                              100.00 
                                              MOSI           1           1                              100.00 
                                               SCK           1           1                              100.00 
                                              SS_n           1           1                              100.00 
                                read_addr_received           1           1                              100.00 
                                             rst_n           1           1                              100.00 
                                      rx_data[9-0]           1           1                              100.00 
                                          rx_valid           1           1                              100.00 
                                      tx_data[7-0]           1           1                              100.00 
                                          tx_valid           1           1                              100.00 

Total Node Count     =         26 
Toggled Node Count   =         26 
Untoggled Node Count =          0 

Toggle Coverage      =     100.00% (52 of 52 bins)

=================================================================================
=== Instance: /top/DUT/slave/slave_sva_inst
=== Design Unit: work.slave_sva
=================================================================================

Assertion Coverage:
    Assertions                       6         6         0   100.00%
--------------------------------------------------------------------
Name                 File(Line)                   Failure      Pass 
                                                  Count        Count
--------------------------------------------------------------------
/top/DUT/slave/slave_sva_inst/slave_not_selected_assertion
                     slave_sva.sv(68)                   0          1
/top/DUT/slave/slave_sva_inst/read_operation_assertion
                     slave_sva.sv(73)                   0          1
/top/DUT/slave/slave_sva_inst/write_addr_assertion
                     slave_sva.sv(78)                   0          1
/top/DUT/slave/slave_sva_inst/read_addr_assertion
                     slave_sva.sv(83)                   0          1
/top/DUT/slave/slave_sva_inst/write_data_assertion
                     slave_sva.sv(88)                   0          1
/top/DUT/slave/slave_sva_inst/reset_assertion
                     slave_sva.sv(94)                   0          1
Branch Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Branches                         2         2         0   100.00%

================================Branch Details================================

Branch Coverage for instance /top/DUT/slave/slave_sva_inst

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File slave_sva.sv
------------------------------------IF Branch------------------------------------
    93                                      1182     Count coming in to IF
    93              1                        217         if (!slaveif.rst_n) begin

                                             965     All False Count
Branch totals: 2 hits of 2 branches = 100.00%



Directive Coverage:
    Directives                       5         5         0   100.00%

DIRECTIVE COVERAGE:
--------------------------------------------------------------------------------------------
Name                                     Design Design   Lang File(Line)      Hits Status    
                                         Unit   UnitType                                     
--------------------------------------------------------------------------------------------
/top/DUT/slave/slave_sva_inst/slave_not_selected_coverage 
                                         slave_sva Verilog  SVA  slave_sva.sv(70) 208 Covered   
/top/DUT/slave/slave_sva_inst/read_operation_coverage 
                                         slave_sva Verilog  SVA  slave_sva.sv(75)   6 Covered   
/top/DUT/slave/slave_sva_inst/write_addr_coverage 
                                         slave_sva Verilog  SVA  slave_sva.sv(80)  18 Covered   
/top/DUT/slave/slave_sva_inst/read_addr_coverage 
                                         slave_sva Verilog  SVA  slave_sva.sv(85)   4 Covered   
/top/DUT/slave/slave_sva_inst/write_data_coverage 
                                         slave_sva Verilog  SVA  slave_sva.sv(90)  19 Covered   
Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                       1         1         0   100.00%

================================Statement Details================================

Statement Coverage for instance /top/DUT/slave/slave_sva_inst --

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File slave_sva.sv
    1                                                module slave_sva (

    2                                                    input bit SCK,

    3                                                    input logic rst_n,

    4                                                    input logic SS_n,

    5                                                    input logic MOSI,

    6                                                    input logic [7:0] tx_data,

    7                                                    input logic tx_valid,

    8                                                    input logic MISO,

    9                                                    input logic [9:0] rx_data,

    10                                                   input logic rx_valid

    11                                               );

    12                                                 logic read_addr_received;

    13                                                 property p_slave_not_selected;

    14                                                   @(posedge slaveif.SCK) disable iff (!slaveif.rst_n) slaveif.SS_n |=> ##1 !slaveif.rx_valid;

    15                                                 endproperty

    16                                               

    17                                                 property p_read_operation;

    18                                                   @(posedge slaveif.SCK) disable iff (!slaveif.rst_n) $fell(

    19                                                       slaveif.SS_n

    20                                                   ) ##1 (slaveif.read_addr_received throughout slaveif.MOSI [* 3]) |=> !slaveif.rx_valid [* 9];

    21                                                 endproperty

    22                                               

    23                                                 property p_write_addr;

    24                                                   @(posedge slaveif.SCK) disable iff (!slaveif.rst_n || slaveif.SS_n) $fell(

    25                                                       slaveif.SS_n

    26                                                   ) ##1 !slaveif.MOSI [* 3] |=> !slaveif.rx_valid ##1 !slaveif.rx_valid [* 7] ##1 $rose(

    27                                                       slaveif.rx_valid

    28                                                   ) ##1 $fell(

    29                                                       slaveif.rx_valid

    30                                                   );

    31                                                 endproperty

    32                                               

    33                                                 property p_read_addr;

    34                                                   @(posedge slaveif.SCK) disable iff (!slaveif.rst_n || slaveif.SS_n) $fell(

    35                                                       slaveif.SS_n

    36                                                   ) ##1 (!slaveif.read_addr_received throughout slaveif.MOSI [* 2] ##1 !slaveif.MOSI) |=>

    37                                                       !slaveif.rx_valid ##1 !slaveif.rx_valid [* 7] ##1 $rose(

    38                                                       slaveif.rx_valid

    39                                                   ) ##1 $fell(

    40                                                       slaveif.rx_valid

    41                                                   );

    42                                                 endproperty

    43                                               

    44                                                 property p_write_data;

    45                                                   @(posedge slaveif.SCK) disable iff (!slaveif.rst_n || slaveif.SS_n) $fell(

    46                                                       slaveif.SS_n

    47                                                   ) ##1 !slaveif.MOSI [* 2] ##1 slaveif.MOSI |=>

    48                                                       !slaveif.rx_valid ##1 !slaveif.rx_valid [* 7] ##1 $rose(

    49                                                       slaveif.rx_valid

    50                                                   ) ##1 $fell(

    51                                                       slaveif.rx_valid

    52                                                   );

    53                                                 endproperty

    54                                               

    55                                                 // property p_read_addr;

    56                                                 //   @(posedge slaveif.SCK) disable iff (!slaveif.rst_n) $fell(

    57                                                 //       slaveif.SS_n

    58                                                 //   ) ##1 slaveif.MOSI [* 2] ##1 !slaveif.MOSI |=> !slaveif.rx_valid [* 7] ##1 $rose(

    59                                                 //       slaveif.rx_valid

    60                                                 //   ) ##1 $fell(

    61                                                 //       slaveif.rx_valid

    62                                                 //   );

    63                                                 // endproperty

    64                                               

    65                                               

    66                                               

    67                                                 slave_not_selected_assertion :

    68                                                 assert property (p_slave_not_selected);

    69                                                 slave_not_selected_coverage :

    70                                                 cover property (p_slave_not_selected);

    71                                               

    72                                                 read_operation_assertion :

    73                                                 assert property (p_read_operation);

    74                                                 read_operation_coverage :

    75                                                 cover property (p_read_operation);

    76                                               

    77                                                 write_addr_assertion :

    78                                                 assert property (p_write_addr);

    79                                                 write_addr_coverage :

    80                                                 cover property (p_write_addr);

    81                                               

    82                                                 read_addr_assertion :

    83                                                 assert property (p_read_addr);

    84                                                 read_addr_coverage :

    85                                                 cover property (p_read_addr);

    86                                               

    87                                                 write_data_assertion :

    88                                                 assert property (p_write_data);

    89                                                 write_data_coverage :

    90                                                 cover property (p_write_data);

    91                                               

    92              1                       1182       always_comb begin


Toggle Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Toggles                         52        50         2    96.15%

================================Toggle Details================================

Toggle Coverage for instance /top/DUT/slave/slave_sva_inst --

                                              Node      1H->0L      0L->1H                          "Coverage"
                                              ---------------------------------------------------------------
                                              MISO           1           1                              100.00 
                                              MOSI           1           1                              100.00 
                                               SCK           1           1                              100.00 
                                              SS_n           1           1                              100.00 
                                read_addr_received           0           0                                0.00 
                                             rst_n           1           1                              100.00 
                                      rx_data[0-9]           1           1                              100.00 
                                          rx_valid           1           1                              100.00 
                                      tx_data[0-7]           1           1                              100.00 
                                          tx_valid           1           1                              100.00 

Total Node Count     =         26 
Toggled Node Count   =         25 
Untoggled Node Count =          1 

Toggle Coverage      =      96.15% (50 of 52 bins)

=================================================================================
=== Instance: /top/DUT/slave
=== Design Unit: work.SPI_Slave
=================================================================================
Branch Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Branches                        41        41         0   100.00%

================================Branch Details================================

Branch Coverage for instance /top/DUT/slave

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File slave.sv
------------------------------------CASE Branch------------------------------------
    38                                     13225     Count coming in to CASE
    39              1                       1355           IDLE: begin

    46              1                       1157           CHK_CMD: begin

    57              1                       4672           WRITE: begin

    64              1                       2536           READ_ADD: begin

    71              1                       3505           READ_DATA: begin

Branch totals: 5 hits of 5 branches = 100.00%

------------------------------------IF Branch------------------------------------
    40                                      1355     Count coming in to IF
    40              1                       1110             if (~slaveif.SS_n) begin

    42              1                        245             end else begin

Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    47                                      1157     Count coming in to IF
    47              1                        244             if (~slaveif.SS_n && MOSI && slaveif.read_addr_received) begin

    49              1                        321             end else if (~slaveif.SS_n && MOSI && ~slaveif.read_addr_received) begin

    51              1                        580             end else if (~slaveif.SS_n && ~MOSI) begin

    53              1                         12             end else begin

Branch totals: 4 hits of 4 branches = 100.00%

------------------------------------IF Branch------------------------------------
    58                                      4672     Count coming in to IF
    58              1                        444             if (slaveif.SS_n || wr_counter == 0) begin

    60              1                       4228             end else begin

Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    65                                      2536     Count coming in to IF
    65              1                        241             if (slaveif.SS_n || wr_counter == 0) begin

    67              1                       2295             end else begin

Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    72                                      3505     Count coming in to IF
    72              1                        102             if (slaveif.SS_n || rd_counter == 0) begin

    74              1                       3403             end else begin

Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    84                                      3278     Count coming in to IF
    84              1                        416         if (~rst_n) begin

    86              1                       2862         end else begin

Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    93                                     10209     Count coming in to IF
    93              1                        423         if (~rst_n) begin

    100             1                       9786         end else begin

Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------CASE Branch------------------------------------
    101                                     9786     Count coming in to CASE
    102             1                        805             IDLE: begin

    109             1                       3030             WRITE: begin

    116             1                       1652             READ_ADD: begin

    125             1                       3534             READ_DATA: begin

                                             765     All False Count
Branch totals: 5 hits of 5 branches = 100.00%

------------------------------------IF Branch------------------------------------
    112                                     3030     Count coming in to IF
    112             1                       2782               wr_counter <= (wr_counter > 0) ? wr_counter - 1 : 0;

    112             2                        248               wr_counter <= (wr_counter > 0) ? wr_counter - 1 : 0;

Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    114                                     3030     Count coming in to IF
    114             1                        248               rx_valid <= (wr_counter == 0) ? 1 : 0;

    114             2                       2782               rx_valid <= (wr_counter == 0) ? 1 : 0;

Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    119                                     1652     Count coming in to IF
    119             1                       1518               wr_counter <= (wr_counter > 0) ? wr_counter - 1 : 0;

    119             2                        134               wr_counter <= (wr_counter > 0) ? wr_counter - 1 : 0;

Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    121                                     1652     Count coming in to IF
    121             1                        134               rx_valid <= (wr_counter == 0) ? 1 : 0;

    121             2                       1518               rx_valid <= (wr_counter == 0) ? 1 : 0;

Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    123                                     1652     Count coming in to IF
    123             1                        134               slaveif.read_addr_received <= (wr_counter == 0) ? 1 : 0;

    123             2                       1518               slaveif.read_addr_received <= (wr_counter == 0) ? 1 : 0;

Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    129                                     3534     Count coming in to IF
    129             1                       1406               if (wr_counter != 4'he) begin

    134             1                        133               end else if (slaveif.tx_valid) begin

                                            1995     All False Count
Branch totals: 3 hits of 3 branches = 100.00%

------------------------------------IF Branch------------------------------------
    138                                      133     Count coming in to IF
    138             1                         14                 if (rd_counter == 1) begin

                                             119     All False Count
Branch totals: 2 hits of 2 branches = 100.00%


Condition Coverage:
    Enabled Coverage              Bins   Covered    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Conditions                      16        16         0   100.00%

================================Condition Details================================

Condition Coverage for instance /top/DUT/slave --

  File slave.sv
----------------Focused Condition View-------------------
Line       47 Item    1  ((~slaveif.SS_n && MOSI) && slaveif.read_addr_received)
Condition totals: 3 of 3 input terms covered = 100.00%

                  Input Term   Covered  Reason for no coverage   Hint
                 -----------  --------  -----------------------  --------------
                slaveif.SS_n         Y
                        MOSI         Y
  slaveif.read_addr_received         Y

     Rows:       Hits  FEC Target                    Non-masking condition(s)      
 ---------  ---------  --------------------          -------------------------     
  Row   1:          1  slaveif.SS_n_0                (slaveif.read_addr_received && MOSI)
  Row   2:          1  slaveif.SS_n_1                -                             
  Row   3:          1  MOSI_0                        ~slaveif.SS_n                 
  Row   4:          1  MOSI_1                        (slaveif.read_addr_received && ~slaveif.SS_n)
  Row   5:          1  slaveif.read_addr_received_0  (~slaveif.SS_n && MOSI)       
  Row   6:          1  slaveif.read_addr_received_1  (~slaveif.SS_n && MOSI)       

----------------Focused Condition View-------------------
Line       58 Item    1  (slaveif.SS_n || (wr_counter == 0))
Condition totals: 2 of 2 input terms covered = 100.00%

         Input Term   Covered  Reason for no coverage   Hint
        -----------  --------  -----------------------  --------------
       slaveif.SS_n         Y
  (wr_counter == 0)         Y

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:          1  slaveif.SS_n_0        ~(wr_counter == 0)            
  Row   2:          1  slaveif.SS_n_1        -                             
  Row   3:          1  (wr_counter == 0)_0   ~slaveif.SS_n                 
  Row   4:          1  (wr_counter == 0)_1   ~slaveif.SS_n                 

----------------Focused Condition View-------------------
Line       65 Item    1  (slaveif.SS_n || (wr_counter == 0))
Condition totals: 2 of 2 input terms covered = 100.00%

         Input Term   Covered  Reason for no coverage   Hint
        -----------  --------  -----------------------  --------------
       slaveif.SS_n         Y
  (wr_counter == 0)         Y

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:          1  slaveif.SS_n_0        ~(wr_counter == 0)            
  Row   2:          1  slaveif.SS_n_1        -                             
  Row   3:          1  (wr_counter == 0)_0   ~slaveif.SS_n                 
  Row   4:          1  (wr_counter == 0)_1   ~slaveif.SS_n                 

----------------Focused Condition View-------------------
Line       72 Item    1  (slaveif.SS_n || (rd_counter == 0))
Condition totals: 2 of 2 input terms covered = 100.00%

         Input Term   Covered  Reason for no coverage   Hint
        -----------  --------  -----------------------  --------------
       slaveif.SS_n         Y
  (rd_counter == 0)         Y

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:          1  slaveif.SS_n_0        ~(rd_counter == 0)            
  Row   2:          1  slaveif.SS_n_1        -                             
  Row   3:          1  (rd_counter == 0)_0   ~slaveif.SS_n                 
  Row   4:          1  (rd_counter == 0)_1   ~slaveif.SS_n                 

----------------Focused Condition View-------------------
Line       112 Item    1  (wr_counter > 0)
Condition totals: 1 of 1 input term covered = 100.00%

        Input Term   Covered  Reason for no coverage   Hint
       -----------  --------  -----------------------  --------------
  (wr_counter > 0)         Y

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:          1  (wr_counter > 0)_0    -                             
  Row   2:          1  (wr_counter > 0)_1    -                             

----------------Focused Condition View-------------------
Line       114 Item    1  (wr_counter == 0)
Condition totals: 1 of 1 input term covered = 100.00%

         Input Term   Covered  Reason for no coverage   Hint
        -----------  --------  -----------------------  --------------
  (wr_counter == 0)         Y

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:          1  (wr_counter == 0)_0   -                             
  Row   2:          1  (wr_counter == 0)_1   -                             

----------------Focused Condition View-------------------
Line       119 Item    1  (wr_counter > 0)
Condition totals: 1 of 1 input term covered = 100.00%

        Input Term   Covered  Reason for no coverage   Hint
       -----------  --------  -----------------------  --------------
  (wr_counter > 0)         Y

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:          1  (wr_counter > 0)_0    -                             
  Row   2:          1  (wr_counter > 0)_1    -                             

----------------Focused Condition View-------------------
Line       121 Item    1  (wr_counter == 0)
Condition totals: 1 of 1 input term covered = 100.00%

         Input Term   Covered  Reason for no coverage   Hint
        -----------  --------  -----------------------  --------------
  (wr_counter == 0)         Y

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:          1  (wr_counter == 0)_0   -                             
  Row   2:          1  (wr_counter == 0)_1   -                             

----------------Focused Condition View-------------------
Line       123 Item    1  (wr_counter == 0)
Condition totals: 1 of 1 input term covered = 100.00%

         Input Term   Covered  Reason for no coverage   Hint
        -----------  --------  -----------------------  --------------
  (wr_counter == 0)         Y

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:          1  (wr_counter == 0)_0   -                             
  Row   2:          1  (wr_counter == 0)_1   -                             

----------------Focused Condition View-------------------
Line       129 Item    1  (wr_counter != 14)
Condition totals: 1 of 1 input term covered = 100.00%

          Input Term   Covered  Reason for no coverage   Hint
         -----------  --------  -----------------------  --------------
  (wr_counter != 14)         Y

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:          1  (wr_counter != 14)_0  -                             
  Row   2:          1  (wr_counter != 14)_1  -                             

----------------Focused Condition View-------------------
Line       138 Item    1  (rd_counter == 1)
Condition totals: 1 of 1 input term covered = 100.00%

         Input Term   Covered  Reason for no coverage   Hint
        -----------  --------  -----------------------  --------------
  (rd_counter == 1)         Y

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:          1  (rd_counter == 1)_0   -                             
  Row   2:          1  (rd_counter == 1)_1   -                             


FSM Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    FSM States                       5         5         0   100.00%
    FSM Transitions                  8         8         0   100.00%

================================FSM Details================================

FSM Coverage for instance /top/DUT/slave --

FSM_ID: cs
    Current State Object : cs
    ----------------------
    State Value MapInfo :
    ---------------------
Line          State Name               Value
----          ----------               -----
  39                IDLE                   0
  46             CHK_CMD                   1
  57               WRITE                   4
  64            READ_ADD                   2
  71           READ_DATA                   3
    Covered States :
    ----------------
                   State           Hit_count
                   -----           ---------
                    IDLE                1029          
                 CHK_CMD                 782          
                   WRITE                 739          
                READ_ADD                 407          
               READ_DATA                 321          
    Covered Transitions :
    ---------------------
Line            Trans_ID           Hit_count          Transition          
----            --------           ---------          ----------          
  41                   0                 782          IDLE -> CHK_CMD               
  54                   1                  28          CHK_CMD -> IDLE               
  52                   2                 381          CHK_CMD -> WRITE              
  50                   3                 208          CHK_CMD -> READ_ADD           
  48                   4                 165          CHK_CMD -> READ_DATA          
  59                   5                 380          WRITE -> IDLE                 
  66                   6                 208          READ_ADD -> IDLE              
  73                   7                 165          READ_DATA -> IDLE             


    Summary                       Bins      Hits    Misses  Coverage
    -------                       ----      ----    ------  --------
        FSM States                   5         5         0   100.00%
        FSM Transitions              8         8         0   100.00%
Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                      41        41         0   100.00%

================================Statement Details================================

Statement Coverage for instance /top/DUT/slave --

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File slave.sv
    3                                                module SPI_Slave (

    4                                                    MOSI,

    5                                                    MISO,

    6                                                    SS_n,

    7                                                    SCK,

    8                                                    rst_n,

    9                                                    rx_data,

    10                                                   tx_data,

    11                                                   rx_valid,

    12                                                   tx_valid

    13                                               );

    14                                               

    15                                                 input MOSI, SS_n;

    16                                                 input SCK, rst_n;

    17                                                 output reg MISO;

    18                                               

    19                                                 input [7:0] tx_data;

    20                                                 input tx_valid;

    21                                                 output reg [9:0] rx_data;

    22                                                 output reg rx_valid;

    23                                               

    24                                                 reg [3:0] wr_counter;

    25                                                 reg [3:0] rd_counter;

    26                                                 // wire invalid_wr, invalid_rd_addr, invalid_rd_data;

    27                                               

    28                                                 (* fsm_encoding = "gray"*)

    29                                                 state_e cs, ns;

    30                                               

    31                                                 //handle invalid cases

    32                                                 // assign invalid_wr = (cs == WRITE) && (wr_counter == 7) && (rx_data[9:8] != 2'b00) && (rx_data[9:8] != 2'b01);

    33                                                 // assign invalid_rd_addr = (cs == READ_ADD) && (wr_counter == 7) && (rx_data[9:8] != 2'b10);

    34                                                 // assign invalid_rd_data = (cs == READ_DATA) && (wr_counter == 7) && (rx_data[9:8] != 2'b11);

    35                                               

    36                                                 // next state logic

    37              1                      13225       always @(*) begin

    38                                                   case (cs)

    39                                                     IDLE: begin

    40                                                       if (~slaveif.SS_n) begin

    41              1                       1110               ns = CHK_CMD;

    42                                                       end else begin

    43              1                        245               ns = IDLE;

    44                                                       end

    45                                                     end

    46                                                     CHK_CMD: begin

    47                                                       if (~slaveif.SS_n && MOSI && slaveif.read_addr_received) begin

    48              1                        244               ns = READ_DATA;

    49                                                       end else if (~slaveif.SS_n && MOSI && ~slaveif.read_addr_received) begin

    50              1                        321               ns = READ_ADD;

    51                                                       end else if (~slaveif.SS_n && ~MOSI) begin

    52              1                        580               ns = WRITE;

    53                                                       end else begin

    54              1                         12               ns = IDLE;

    55                                                       end

    56                                                     end

    57                                                     WRITE: begin

    58                                                       if (slaveif.SS_n || wr_counter == 0) begin

    59              1                        444               ns = IDLE;

    60                                                       end else begin

    61              1                       4228               ns = WRITE;

    62                                                       end

    63                                                     end

    64                                                     READ_ADD: begin

    65                                                       if (slaveif.SS_n || wr_counter == 0) begin

    66              1                        241               ns = IDLE;

    67                                                       end else begin

    68              1                       2295               ns = READ_ADD;

    69                                                       end

    70                                                     end

    71                                                     READ_DATA: begin

    72                                                       if (slaveif.SS_n || rd_counter == 0) begin

    73              1                        102               ns = IDLE;

    74                                                       end else begin

    75              1                       3403               ns = READ_DATA;

    76                                                       end

    77                                                     end

    78                                                     default: ns = IDLE;

    79                                                   endcase

    80                                                 end

    81                                               

    82                                                 // state memory 

    83              1                       3278       always @(posedge SCK or negedge rst_n) begin

    84                                                   if (~rst_n) begin

    85              1                        416           cs <= IDLE;

    86                                                   end else begin

    87              1                       2862           cs <= ns;

    88                                                   end

    89                                                 end

    90                                               

    91                                                 // output logic

    92              1                      10209       always @(posedge SCK or negedge rst_n) begin

    93                                                   if (~rst_n) begin

    94              1                        423           wr_counter <= 9;

    95              1                        423           rd_counter <= 7;

    96              1                        423           rx_data <= 0;

    97              1                        423           slaveif.read_addr_received <= 0;

    98              1                        423           MISO <= 0;

    99              1                        423           rx_valid <= 0;

    100                                                  end else begin

    101                                                    case (cs)

    102                                                      IDLE: begin

    103             1                        805               wr_counter <= 9;

    104             1                        805               rd_counter <= 7;

    105             1                        805               rx_data <= 0;

    106             1                        805               rx_valid <= 0;

    107             1                        805               MISO <= 0;

    108                                                      end

    109                                                      WRITE: begin

    110                                                        // drive rx_data bus with parallel write address / data

    111             1                       3030               rx_data[wr_counter] <= MOSI;

    112             1                       3030               wr_counter <= (wr_counter > 0) ? wr_counter - 1 : 0;

    113                                                        // check data is valid or not

    114             1                       3030               rx_valid <= (wr_counter == 0) ? 1 : 0;

    115                                                      end

    116                                                      READ_ADD: begin

    117                                                        // drive rx_data bus with parallel read address

    118             1                       1652               rx_data[wr_counter] <= MOSI;

    119             1                       1652               wr_counter <= (wr_counter > 0) ? wr_counter - 1 : 0;

    120                                                        // check data is valid or not

    121             1                       1652               rx_valid <= (wr_counter == 0) ? 1 : 0;

    122                                                        // indicate address is received

    123             1                       1652               slaveif.read_addr_received <= (wr_counter == 0) ? 1 : 0;

    124                                                      end

    125                                                      READ_DATA: begin

    126                                              

    127                                                        // check data is valid or not

    128             1                       3534               rx_valid <= 0;

    129                                                        if (wr_counter != 4'he) begin

    130                                                          // drive rx_data bus with parallel read command & dummy data

    131             1                       1406                 rx_data[wr_counter] <= MOSI;

    132             1                       1406                 wr_counter <= wr_counter - 1;

    133                                              

    134                                                        end else if (slaveif.tx_valid) begin

    135                                                          // receive parallel data and convert it to serial on MISO port

    136             1                        133                 MISO <= slaveif.tx_data[rd_counter];

    137             1                        133                 rd_counter <= rd_counter - 1;

    138                                                          if (rd_counter == 1) begin

    139                                                            // indicate received address is used and waiting for new address

    140             1                         14                   slaveif.read_addr_received <= 0;


Toggle Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Toggles                         76        76         0   100.00%

================================Toggle Details================================

Toggle Coverage for instance /top/DUT/slave --

                                              Node      1H->0L      0L->1H                          "Coverage"
                                              ---------------------------------------------------------------
                                              MISO           1           1                              100.00 
                                              MOSI           1           1                              100.00 
                                               SCK           1           1                              100.00 
                                              SS_n           1           1                              100.00 
                                                cs               ENUM type       Value       Count 
                                                                      IDLE           2      100.00 
                                                                   CHK_CMD           3      100.00 
                                                                  READ_ADD           1      100.00 
                                                                 READ_DATA           1      100.00 
                                                                     WRITE           1      100.00 
                                                ns               ENUM type       Value       Count 
                                                                      IDLE           2      100.00 
                                                                   CHK_CMD           3      100.00 
                                                                  READ_ADD           1      100.00 
                                                                 READ_DATA           1      100.00 
                                                                     WRITE           1      100.00 
                                   rd_counter[3-0]           1           1                              100.00 
                                             rst_n           1           1                              100.00 
                                      rx_data[9-0]           1           1                              100.00 
                                          rx_valid           1           1                              100.00 
                                      tx_data[0-7]           1           1                              100.00 
                                          tx_valid           1           1                              100.00 
                                   wr_counter[3-0]           1           1                              100.00 

Total Node Count     =         43 
Toggled Node Count   =         43 
Untoggled Node Count =          0 

Toggle Coverage      =     100.00% (76 of 76 bins)

=================================================================================
=== Instance: /top/DUT/ram/ram_sva_inst
=== Design Unit: work.ram_sva
=================================================================================

Assertion Coverage:
    Assertions                       4         4         0   100.00%
--------------------------------------------------------------------
Name                 File(Line)                   Failure      Pass 
                                                  Count        Count
--------------------------------------------------------------------
/top/DUT/ram/ram_sva_inst/output_valid_assertion
                     ram_sva.sv(27)                     0          1
/top/DUT/ram/ram_sva_inst/output_invalid_assertion
                     ram_sva.sv(32)                     0          1
/top/DUT/ram/ram_sva_inst/output_constant_assertion
                     ram_sva.sv(37)                     0          1
/top/DUT/ram/ram_sva_inst/reset_assertion
                     ram_sva.sv(43)                     0          1
Branch Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Branches                         2         2         0   100.00%

================================Branch Details================================

Branch Coverage for instance /top/DUT/ram/ram_sva_inst

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File ram_sva.sv
------------------------------------IF Branch------------------------------------
    42                                       570     Count coming in to IF
    42              1                        233         if (!ramif.rst_n) begin

                                             337     All False Count
Branch totals: 2 hits of 2 branches = 100.00%



Directive Coverage:
    Directives                       3         3         0   100.00%

DIRECTIVE COVERAGE:
--------------------------------------------------------------------------------------------
Name                                     Design Design   Lang File(Line)      Hits Status    
                                         Unit   UnitType                                     
--------------------------------------------------------------------------------------------
/top/DUT/ram/ram_sva_inst/output_valid_coverage 
                                         ram_sva Verilog  SVA  ram_sva.sv(29)    93 Covered   
/top/DUT/ram/ram_sva_inst/output_invalid_coverage 
                                         ram_sva Verilog  SVA  ram_sva.sv(34)   276 Covered   
/top/DUT/ram/ram_sva_inst/output_constant_coverage 
                                         ram_sva Verilog  SVA  ram_sva.sv(39)  9209 Covered   
Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                       1         1         0   100.00%

================================Statement Details================================

Statement Coverage for instance /top/DUT/ram/ram_sva_inst --

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File ram_sva.sv
    1                                                module ram_sva (

    2                                                    input bit clk,

    3                                                    input logic [9:0] din,

    4                                                    input logic rst_n,

    5                                                    input logic rx_valid,

    6                                                    input logic [7:0] dout,

    7                                                    input logic tx_valid

    8                                                );

    9                                                

    10                                                 property p_output_valid;

    11                                                   @(posedge ramif.clk) disable iff (!ramif.rst_n) ramif.rx_valid && (ramif.din[9:8] == 2'b11) |=> ramif.tx_valid;

    12                                                 endproperty

    13                                               

    14                                                 property p_output_invalid;

    15                                                   @(posedge ramif.clk) disable iff (!ramif.rst_n) ramif.rx_valid && (ramif.din[9:8] != 2'b11) |=> !ramif.tx_valid;

    16                                                 endproperty

    17                                               

    18                                                 property p_output_constant;

    19                                                   @(posedge ramif.clk) disable iff (!ramif.rst_n) !ramif.rx_valid |=> ramif.tx_valid == $past(

    20                                                       ramif.tx_valid

    21                                                   );

    22                                                 endproperty

    23                                               

    24                                               

    25                                               

    26                                                 output_valid_assertion :

    27                                                 assert property (p_output_valid);

    28                                                 output_valid_coverage :

    29                                                 cover property (p_output_valid);

    30                                               

    31                                                 output_invalid_assertion :

    32                                                 assert property (p_output_invalid);

    33                                                 output_invalid_coverage :

    34                                                 cover property (p_output_invalid);

    35                                               

    36                                                 output_constant_assertion :

    37                                                 assert property (p_output_constant);

    38                                                 output_constant_coverage :

    39                                                 cover property (p_output_constant);

    40                                               

    41              1                        570       always_comb begin


Toggle Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Toggles                         44        44         0   100.00%

================================Toggle Details================================

Toggle Coverage for instance /top/DUT/ram/ram_sva_inst --

                                              Node      1H->0L      0L->1H                          "Coverage"
                                              ---------------------------------------------------------------
                                               clk           1           1                              100.00 
                                          din[0-9]           1           1                              100.00 
                                         dout[0-7]           1           1                              100.00 
                                             rst_n           1           1                              100.00 
                                          rx_valid           1           1                              100.00 
                                          tx_valid           1           1                              100.00 

Total Node Count     =         22 
Toggled Node Count   =         22 
Untoggled Node Count =          0 

Toggle Coverage      =     100.00% (44 of 44 bins)

=================================================================================
=== Instance: /top/DUT/ram
=== Design Unit: work.RAM
=================================================================================

Assertion Coverage:
    Assertions                       2         2         0   100.00%
--------------------------------------------------------------------
Name                 File(Line)                   Failure      Pass 
                                                  Count        Count
--------------------------------------------------------------------
/top/DUT/ram/address_updated_assertion
                     ram.sv(66)                         0          1
/top/DUT/ram/address_unchanged_assertion
                     ram.sv(71)                         0          1
Branch Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Branches                         7         7         0   100.00%

================================Branch Details================================

Branch Coverage for instance /top/DUT/ram

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File ram.sv
------------------------------------IF Branch------------------------------------
    24                                      4328     Count coming in to IF
    24              1                        416         if (~rst_n) begin

    28              1                       3912         end else begin

Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------CASE Branch------------------------------------
    29                                      3912     Count coming in to CASE
    32              1                         90             3'b001: begin

    36              1                        101             3'b011: begin

    40              1                         89             3'b101: begin

    44              1                         94             3'b111: begin

                                            3538     All False Count
Branch totals: 5 hits of 5 branches = 100.00%



Directive Coverage:
    Directives                       2         2         0   100.00%

DIRECTIVE COVERAGE:
--------------------------------------------------------------------------------------------
Name                                     Design Design   Lang File(Line)      Hits Status    
                                         Unit   UnitType                                     
--------------------------------------------------------------------------------------------
/top/DUT/ram/address_updated_coverage    RAM    Verilog  SVA  ram.sv(68)       176 Covered   
/top/DUT/ram/address_unchanged_coverage  RAM    Verilog  SVA  ram.sv(73)       193 Covered   
Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                      12        12         0   100.00%

================================Statement Details================================

Statement Coverage for instance /top/DUT/ram --

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File ram.sv
    2                                                module RAM (

    3                                                    din,

    4                                                    clk,

    5                                                    rst_n,

    6                                                    rx_valid,

    7                                                    dout,

    8                                                    tx_valid

    9                                                );

    10                                               

    11                                                 input [9:0] din;

    12                                                 input clk, rst_n, rx_valid;

    13                                                 output reg [7:0] dout;

    14                                                 output reg tx_valid;

    15                                               

    16                                                 parameter ADDR_SIZE = 8;

    17                                                 logic [ADDR_SIZE-1:0] addr;

    18                                               

    19                                                 parameter MEM_DEPTH = 256;

    20                                                 reg [7:0] mem[MEM_DEPTH-1:0];

    21                                               

    22                                                 // memory read and write operations

    23              1                       4328       always @(posedge clk or negedge rst_n) begin

    24                                                   if (~rst_n) begin

    25              1                        416           dout <= 0;

    26              1                        416           addr <= 0;

    27              1                        416           tx_valid <= 0;

    28                                                   end else begin

    29                                                     case ({

    30                                                       din[9:8], rx_valid

    31                                                     })

    32                                                       3'b001: begin

    33              1                         90               addr <= din[7:0];

    34              1                         90               tx_valid <= 0;

    35                                                       end

    36                                                       3'b011: begin

    37              1                        101               mem[addr] <= din[7:0];

    38              1                        101               tx_valid  <= 0;

    39                                                       end

    40                                                       3'b101: begin

    41              1                         89               addr <= din[7:0];

    42              1                         89               tx_valid <= 0;

    43                                                       end

    44                                                       3'b111: begin

    45              1                         94               dout <= mem[addr];

    46              1                         94               tx_valid <= 1;


Toggle Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Toggles                         60        60         0   100.00%

================================Toggle Details================================

Toggle Coverage for instance /top/DUT/ram --

                                              Node      1H->0L      0L->1H                          "Coverage"
                                              ---------------------------------------------------------------
                                         addr[7-0]           1           1                              100.00 
                                               clk           1           1                              100.00 
                                          din[0-9]           1           1                              100.00 
                                         dout[7-0]           1           1                              100.00 
                                             rst_n           1           1                              100.00 
                                          rx_valid           1           1                              100.00 
                                          tx_valid           1           1                              100.00 

Total Node Count     =         30 
Toggled Node Count   =         30 
Untoggled Node Count =          0 

Toggle Coverage      =     100.00% (60 of 60 bins)

=================================================================================
=== Instance: /top/DUT
=== Design Unit: work.SPI_wrapper
=================================================================================
Toggle Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Toggles                         40        40         0   100.00%

================================Toggle Details================================

Toggle Coverage for instance /top/DUT --

                                              Node      1H->0L      0L->1H                          "Coverage"
                                              ---------------------------------------------------------------
                                      rx_data[0-9]           1           1                              100.00 
                                          rx_valid           1           1                              100.00 
                                      tx_data[0-7]           1           1                              100.00 
                                          tx_valid           1           1                              100.00 

Total Node Count     =         20 
Toggled Node Count   =         20 
Untoggled Node Count =          0 

Toggle Coverage      =     100.00% (40 of 40 bins)

=================================================================================
=== Instance: /top
=== Design Unit: work.top
=================================================================================
Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                      20        20         0   100.00%

================================Statement Details================================

Statement Coverage for instance /top --

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File wrapper_top.sv
    5                                                module top ();

    6                                                  bit clk;

    7                                                

    8                                                  initial begin

    9               1                          1         forever begin

    10              1                      20003           #1 clk = ~clk;

    10              2                      20002     
    11                                                   end

    12                                                 end

    13                                               

    14                                                 wrapper_if wif (clk);

    15                                                 ram_if ramif (wif.clk);

    16                                                 slave_if slaveif (wif.clk);

    17                                               

    18                                                 SPI_wrapper DUT (wif);

    19                                               

    20                                                 bind DUT.ram ram_sva ram_sva_inst (

    21                                                     ramif.clk,

    22                                                     ramif.din,

    23                                                     ramif.rst_n,

    24                                                     ramif.rx_valid,

    25                                                     ramif.dout,

    26                                                     ramif.rx_valid

    27                                                 );

    28                                                 bind DUT.slave slave_sva slave_sva_inst (

    29                                                     slaveif.SCK,

    30                                                     slaveif.rst_n,

    31                                                     slaveif.SS_n,

    32                                                     slaveif.MOSI,

    33                                                     slaveif.tx_data,

    34                                                     slaveif.tx_valid,

    35                                                     slaveif.MISO,

    36                                                     slaveif.rx_data,

    37                                                     slaveif.rx_valid

    38                                                 );

    39                                               

    40              1                       3760       assign ramif.din = DUT.rx_data;

    41              1                        417       assign ramif.rst_n = wif.rst_n;

    42              1                        766       assign ramif.rx_valid = DUT.rx_valid;

    43              1                        145       assign ramif.dout = DUT.tx_data;

    44              1                        154       assign ramif.tx_valid = DUT.tx_valid;

    45                                               

    46              1                        417       assign slaveif.rst_n = wif.rst_n;

    47              1                        450       assign slaveif.SS_n = wif.SS_n;

    48              1                       4954       assign slaveif.MOSI = wif.MOSI;

    49              1                        145       assign slaveif.tx_data = DUT.tx_data;

    50              1                        154       assign slaveif.tx_valid = DUT.tx_valid;

    51              1                         62       assign slaveif.MISO = wif.MISO;

    52              1                       3760       assign slaveif.rx_data = DUT.rx_data;

    53              1                        766       assign slaveif.rx_valid = DUT.rx_valid;

    54                                               

    55                                               

    56                                                 initial begin

    57              1                          1         uvm_config_db#(virtual wrapper_if)::set(null, "uvm_test_top", "wrapper_IF", wif);

    58              1                          1         uvm_config_db#(virtual slave_if)::set(null, "uvm_test_top", "slave_IF", slaveif);

    59              1                          1         uvm_config_db#(virtual ram_if)::set(null, "uvm_test_top", "RAM_IF", ramif);

    60              1                          1         run_test("wrapper_test");


Toggle Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Toggles                          2         2         0   100.00%

================================Toggle Details================================

Toggle Coverage for instance /top --

                                              Node      1H->0L      0L->1H                          "Coverage"
                                              ---------------------------------------------------------------
                                               clk           1           1                              100.00 

Total Node Count     =          1 
Toggled Node Count   =          1 
Untoggled Node Count =          0 

Toggle Coverage      =     100.00% (2 of 2 bins)

=================================================================================
=== Instance: /slave_seq_item_pkg
=== Design Unit: work.slave_seq_item_pkg
=================================================================================
Branch Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Branches                        10         0        10     0.00%

================================Branch Details================================

Branch Coverage for instance /slave_seq_item_pkg

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File slave_seq_item.sv
------------------------------------IF Branch------------------------------------
    6                                    ***0***     Count coming in to IF
    6               1                    ***0***         `uvm_object_utils(slave_seq_item)

                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    6                                    ***0***     Count coming in to IF
    6               2                    ***0***         `uvm_object_utils(slave_seq_item)

                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    6                                    ***0***     Count coming in to IF
    6               3                    ***0***         `uvm_object_utils(slave_seq_item)

    6               4                    ***0***         `uvm_object_utils(slave_seq_item)

Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    6                                    ***0***     Count coming in to IF
    6               5                    ***0***         `uvm_object_utils(slave_seq_item)

                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    6                                    ***0***     Count coming in to IF
    6               6                    ***0***         `uvm_object_utils(slave_seq_item)

                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%


Condition Coverage:
    Enabled Coverage              Bins   Covered    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Conditions                       2         0         2     0.00%

================================Condition Details================================

Condition Coverage for instance /slave_seq_item_pkg --

  File slave_seq_item.sv
----------------Focused Condition View-------------------
Line       6 Item    1  (name != 0)
Condition totals: 0 of 1 input term covered = 0.00%

   Input Term   Covered  Reason for no coverage   Hint
  -----------  --------  -----------------------  --------------
  (name != 0)         N  No hits                  Hit '_0' and '_1'

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:    ***0***  (name != 0)_0         -                             
  Row   2:    ***0***  (name != 0)_1         -                             

----------------Focused Condition View-------------------
Line       6 Item    2  (tmp_data__ != null)
Condition totals: 0 of 1 input term covered = 0.00%

            Input Term   Covered  Reason for no coverage   Hint
           -----------  --------  -----------------------  --------------
  (tmp_data__ != null)         N  No hits                  Hit '_0' and '_1'

     Rows:       Hits  FEC Target              Non-masking condition(s)      
 ---------  ---------  --------------------    -------------------------     
  Row   1:    ***0***  (tmp_data__ != null)_0  -                             
  Row   2:    ***0***  (tmp_data__ != null)_1  -                             


Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                      13         1        12     7.69%

================================Statement Details================================

Statement Coverage for instance /slave_seq_item_pkg --

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File slave_seq_item.sv
    1                                                package slave_seq_item_pkg;

    2                                                  import uvm_pkg::*;

    3                                                  `include "uvm_macros.svh"

    4                                                

    5                                                  class slave_seq_item extends uvm_sequence_item;

    6               1                    ***0***         `uvm_object_utils(slave_seq_item)

    6               2                    ***0***     
    6               3                    ***0***     
    6               4                    ***0***     
    6               5                    ***0***     
    6               6                    ***0***     
    6               7                    ***0***     
    6               8                    ***0***     
    6               9                    ***0***     
    6              10                    ***0***     
    7                                                

    8                                                    rand bit MOSI, SS_n;

    9                                                    rand bit rst_n;

    10                                                   logic MISO;

    11                                               

    12                                                   rand logic [7:0] tx_data;

    13                                                   rand bit tx_valid;

    14                                                   logic [9:0] rx_data;

    15                                                   logic rx_valid;

    16                                               

    17                                                   bit mosi_seq[$];

    18                                               

    19                                                   function new(string name = "slave_seq_item");

    20              1                      10002           super.new(name);

    21                                                   endfunction  //new()

    22                                               

    23                                                   virtual function string convert2string();

    24              1                    ***0***           return $sformatf(

    25                                                         "%s rst_n = %b, SS_n = %b, MOSI = %b, tx_data = %h, tx_valid = %b, rx_valid = %b, MISO = %b, rx_data = %h",

    26                                                         super.convert2string(),

    27                                                         rst_n,

    28                                                         SS_n,

    29                                                         MOSI,

    30                                                         tx_data,

    31                                                         tx_valid,

    32                                                         rx_valid,

    33                                                         MISO,

    34                                                         rx_data

    35                                                     );

    36                                                   endfunction

    37                                               

    38                                                   virtual function string convert2string_stimulus();

    39              1                    ***0***           return $sformatf(



=================================================================================
=== Instance: /slave_config_pkg
=== Design Unit: work.slave_config_pkg
=================================================================================
Branch Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Branches                        10         0        10     0.00%

================================Branch Details================================

Branch Coverage for instance /slave_config_pkg

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File slave_config.sv
------------------------------------IF Branch------------------------------------
    6                                    ***0***     Count coming in to IF
    6               1                    ***0***         `uvm_object_utils(slave_config)

                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    6                                    ***0***     Count coming in to IF
    6               2                    ***0***         `uvm_object_utils(slave_config)

                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    6                                    ***0***     Count coming in to IF
    6               3                    ***0***         `uvm_object_utils(slave_config)

    6               4                    ***0***         `uvm_object_utils(slave_config)

Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    6                                    ***0***     Count coming in to IF
    6               5                    ***0***         `uvm_object_utils(slave_config)

                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    6                                    ***0***     Count coming in to IF
    6               6                    ***0***         `uvm_object_utils(slave_config)

                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%


Condition Coverage:
    Enabled Coverage              Bins   Covered    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Conditions                       2         0         2     0.00%

================================Condition Details================================

Condition Coverage for instance /slave_config_pkg --

  File slave_config.sv
----------------Focused Condition View-------------------
Line       6 Item    1  (name != 0)
Condition totals: 0 of 1 input term covered = 0.00%

   Input Term   Covered  Reason for no coverage   Hint
  -----------  --------  -----------------------  --------------
  (name != 0)         N  No hits                  Hit '_0' and '_1'

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:    ***0***  (name != 0)_0         -                             
  Row   2:    ***0***  (name != 0)_1         -                             

----------------Focused Condition View-------------------
Line       6 Item    2  (tmp_data__ != null)
Condition totals: 0 of 1 input term covered = 0.00%

            Input Term   Covered  Reason for no coverage   Hint
           -----------  --------  -----------------------  --------------
  (tmp_data__ != null)         N  No hits                  Hit '_0' and '_1'

     Rows:       Hits  FEC Target              Non-masking condition(s)      
 ---------  ---------  --------------------    -------------------------     
  Row   1:    ***0***  (tmp_data__ != null)_0  -                             
  Row   2:    ***0***  (tmp_data__ != null)_1  -                             


Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                      11         1        10     9.09%

================================Statement Details================================

Statement Coverage for instance /slave_config_pkg --

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File slave_config.sv
    1                                                package slave_config_pkg;

    2                                                  import uvm_pkg::*;

    3                                                  `include "uvm_macros.svh"

    4                                                

    5                                                  class slave_config extends uvm_object;

    6               1                    ***0***         `uvm_object_utils(slave_config)

    6               2                    ***0***     
    6               3                    ***0***     
    6               4                    ***0***     
    6               5                    ***0***     
    6               6                    ***0***     
    6               7                    ***0***     
    6               8                    ***0***     
    6               9                    ***0***     
    6              10                    ***0***     
    7                                                

    8                                                    virtual slave_if slave_vif;

    9                                                    uvm_active_passive_enum is_active;

    10                                               

    11                                                   function new(string name = "slave_config");

    12              1                          1           super.new(name);



=================================================================================
=== Instance: /slave_driver_pkg
=== Design Unit: work.slave_driver_pkg
=================================================================================
Branch Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Branches                         2         0         2     0.00%

================================Branch Details================================

Branch Coverage for instance /slave_driver_pkg

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File slave_driver.sv
------------------------------------IF Branch------------------------------------
    31                                   ***0***     Count coming in to IF
    31              1                    ***0***             `uvm_info("run_phase", stim_seq_item.convert2string_stimulus(), UVM_HIGH);

                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%


Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                      16         0        16     0.00%

================================Statement Details================================

Statement Coverage for instance /slave_driver_pkg --

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File slave_driver.sv
    1                                                package slave_driver_pkg;

    2                                                  import uvm_pkg::*;

    3                                                  import slave_config_pkg::*;

    4                                                  import slave_seq_item_pkg::*;

    5                                                  `include "uvm_macros.svh"

    6                                                

    7                                                  class slave_driver extends uvm_driver #(slave_seq_item);

    8               1                    ***0***         `uvm_component_utils(slave_driver);

    8               2                    ***0***     
    8               3                    ***0***     
    9                                                

    10                                                   virtual slave_if slave_vif;

    11                                                   slave_seq_item   stim_seq_item;

    12                                               

    13                                                   function new(string name = "slave_driver", uvm_component parent = null);

    14              1                    ***0***           super.new(name, parent);

    15                                                   endfunction  //new()

    16                                               

    17                                                   virtual task run_phase(uvm_phase phase);

    18              1                    ***0***           super.run_phase(phase);

    19              1                    ***0***           forever begin

    20              1                    ***0***             stim_seq_item = slave_seq_item::type_id::create("stim_seq_item");

    21                                               

    22              1                    ***0***             seq_item_port.get_next_item(stim_seq_item);

    23              1                    ***0***             slave_vif.rst_n = stim_seq_item.rst_n;

    24              1                    ***0***             slave_vif.SS_n = stim_seq_item.SS_n;

    25              1                    ***0***             slave_vif.MOSI = stim_seq_item.MOSI;

    26              1                    ***0***             slave_vif.tx_data = stim_seq_item.tx_data;

    27              1                    ***0***             slave_vif.tx_valid = stim_seq_item.tx_valid;

    28              1                    ***0***             @(negedge slave_vif.SCK);

    29              1                    ***0***             seq_item_port.item_done();

    30                                               

    31              1                    ***0***             `uvm_info("run_phase", stim_seq_item.convert2string_stimulus(), UVM_HIGH);



=================================================================================
=== Instance: /slave_sequencer_pkg
=== Design Unit: work.slave_sequencer_pkg
=================================================================================
Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                       4         0         4     0.00%

================================Statement Details================================

Statement Coverage for instance /slave_sequencer_pkg --

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File slave_sqr.sv
    1                                                package slave_sequencer_pkg;

    2                                                  import uvm_pkg::*;

    3                                                  import slave_seq_item_pkg::*;

    4                                                  `include "uvm_macros.svh"

    5                                                

    6                                                  class slave_sequencer extends uvm_sequencer #(slave_seq_item);

    7               1                    ***0***         `uvm_component_utils(slave_sequencer)

    7               2                    ***0***     
    7               3                    ***0***     
    8                                                

    9                                                    function new(string name = "slave_sequencer", uvm_component parent = null);

    10              1                    ***0***           super.new(name, parent);



=================================================================================
=== Instance: /slave_monitor_pkg
=== Design Unit: work.slave_monitor_pkg
=================================================================================
Branch Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Branches                         2         1         1    50.00%

================================Branch Details================================

Branch Coverage for instance /slave_monitor_pkg

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File slave_monitor.sv
------------------------------------IF Branch------------------------------------
    39                                     10001     Count coming in to IF
    39              1                    ***0***             `uvm_info("run_phase", rsp_seq_item.convert2string(), UVM_HIGH)

                                           10001     All False Count
Branch totals: 1 hit of 2 branches = 50.00%


Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                      20        17         3    85.00%

================================Statement Details================================

Statement Coverage for instance /slave_monitor_pkg --

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File slave_monitor.sv
    1                                                package slave_monitor_pkg;

    2                                                  import slave_seq_item_pkg::*;

    3                                                  import uvm_pkg::*;

    4                                                  `include "uvm_macros.svh"

    5                                                

    6                                                  class slave_monitor extends uvm_monitor;

    7               1                    ***0***         `uvm_component_utils(slave_monitor)

    7               2                    ***0***     
    7               3                          2     
    8                                                

    9                                                    virtual slave_if slave_vif;

    10                                                   slave_seq_item rsp_seq_item;

    11                                                   uvm_analysis_port #(slave_seq_item) mon_ap;

    12                                               

    13                                                   function new(string name = "slave_monitor", uvm_component parent = null);

    14              1                          1           super.new(name, parent);

    15                                                   endfunction  //new()

    16                                               

    17                                                   virtual function void build_phase(uvm_phase phase);

    18              1                          1           super.build_phase(phase);

    19              1                          1           mon_ap = new("mon_ap", this);

    20                                                   endfunction

    21                                               

    22                                                   virtual task run_phase(uvm_phase phase);

    23              1                          1           super.run_phase(phase);

    24                                               

    25              1                          1           forever begin

    26              1                      10002             rsp_seq_item = slave_seq_item::type_id::create("rsp_seq_item");

    27                                               

    28              1                      10002             @(negedge slave_vif.SCK);

    29              1                      10001             rsp_seq_item.rst_n    = slave_vif.rst_n;

    30              1                      10001             rsp_seq_item.SS_n     = slave_vif.SS_n;

    31              1                      10001             rsp_seq_item.rx_valid = slave_vif.rx_valid;

    32              1                      10001             rsp_seq_item.tx_valid = slave_vif.tx_valid;

    33              1                      10001             rsp_seq_item.rx_data  = slave_vif.rx_data;

    34              1                      10001             rsp_seq_item.tx_data  = slave_vif.tx_data;

    35              1                      10001             rsp_seq_item.MOSI     = slave_vif.MOSI;

    36              1                      10001             rsp_seq_item.MISO     = slave_vif.MISO;

    37                                               

    38              1                      10001             mon_ap.write(rsp_seq_item);

    39              1                    ***0***             `uvm_info("run_phase", rsp_seq_item.convert2string(), UVM_HIGH)



=================================================================================
=== Instance: /slave_agent_pkg
=== Design Unit: work.slave_agent_pkg
=================================================================================
Branch Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Branches                         8         3         5    37.50%

================================Branch Details================================

Branch Coverage for instance /slave_agent_pkg

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File slave_agent.sv
------------------------------------IF Branch------------------------------------
    26                                         1     Count coming in to IF
    26              1                    ***0***           if (!uvm_config_db#(slave_config)::get(this, "", "slave_CFG", slave_cfg)) begin

                                               1     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    27                                   ***0***     Count coming in to IF
    27              1                    ***0***             `uvm_fatal("build_phase",

                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    31                                         1     Count coming in to IF
    31              1                    ***0***           if (slave_cfg.is_active == UVM_ACTIVE) begin

                                               1     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    41                                         1     Count coming in to IF
    41              1                    ***0***           if (slave_cfg.is_active == UVM_ACTIVE) begin

                                               1     All False Count
Branch totals: 1 hit of 2 branches = 50.00%


Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                      14         7         7    50.00%

================================Statement Details================================

Statement Coverage for instance /slave_agent_pkg --

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File slave_agent.sv
    1                                                package slave_agent_pkg;

    2                                                  import uvm_pkg::*;

    3                                                  import slave_seq_item_pkg::*;

    4                                                  import slave_monitor_pkg::*;

    5                                                  import slave_config_pkg::*;

    6                                                  import slave_sequencer_pkg::*;

    7                                                  import slave_driver_pkg::*;

    8                                                  `include "uvm_macros.svh"

    9                                                

    10                                                 class slave_agent extends uvm_agent;

    11              1                    ***0***         `uvm_component_utils(slave_agent)

    11              2                    ***0***     
    11              3                          2     
    12                                               

    13                                                   slave_driver driver;

    14                                                   slave_sequencer sqr;

    15                                                   slave_monitor mon;

    16                                                   slave_config slave_cfg;

    17                                                   uvm_analysis_port #(slave_seq_item) agt_ap;

    18                                               

    19                                                   function new(string name = "slave_agent", uvm_component parent = null);

    20              1                          1           super.new(name, parent);

    21                                                   endfunction  //new()

    22                                               

    23                                                   virtual function void build_phase(uvm_phase phase);

    24              1                          1           super.build_phase(phase);

    25                                               

    26                                                     if (!uvm_config_db#(slave_config)::get(this, "", "slave_CFG", slave_cfg)) begin

    27              1                    ***0***             `uvm_fatal("build_phase",

    28                                                                  "Agent - Unable to get the configuratoin object of the slave from uvm_config_db")

    29                                                     end

    30                                               

    31                                                     if (slave_cfg.is_active == UVM_ACTIVE) begin

    32              1                    ***0***             driver = slave_driver::type_id::create("driver", this);

    33              1                    ***0***             sqr = slave_sequencer::type_id::create("sqr", this);

    34                                                     end

    35                                               

    36              1                          1           mon = slave_monitor::type_id::create("mon", this);

    37              1                          1           agt_ap = new("agt_ap", this);

    38                                                   endfunction

    39                                               

    40                                                   virtual function void connect_phase(uvm_phase phase);

    41                                                     if (slave_cfg.is_active == UVM_ACTIVE) begin

    42              1                    ***0***             driver.slave_vif = slave_cfg.slave_vif;

    43              1                    ***0***             driver.seq_item_port.connect(sqr.seq_item_export);

    44                                                     end

    45              1                          1           mon.slave_vif = slave_cfg.slave_vif;

    46              1                          1           mon.mon_ap.connect(agt_ap);



=================================================================================
=== Instance: /slave_scoreboard_pkg
=== Design Unit: work.slave_scoreboard_pkg
=================================================================================
Branch Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Branches                        37        28         9    75.67%

================================Branch Details================================

Branch Coverage for instance /slave_scoreboard_pkg

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File slave_scoreboard.sv
------------------------------------IF Branch------------------------------------
    47                                     10001     Count coming in to IF
    47              1                    ***0***             if (rx_data_ref !== seq_item.rx_data || MISO_ref !== seq_item.MISO) begin

    52              1                      10001             end else begin

Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    48                                   ***0***     Count coming in to IF
    48              1                    ***0***               `uvm_error("run_phase", $sformatf(

                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    53                                     10001     Count coming in to IF
    53              1                    ***0***               `uvm_info("run_phase", $sformatf("Comparison succeeded: %s", seq_item.convert2string()),

                                           10001     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    61                                     10001     Count coming in to IF
    61              1                        215           if (!seq_item_chk.rst_n) begin

    72              1                        220           end else if (SS_n_delayed) begin

    88              1                       8585           end else if (start_countdown == 0) begin

    127             1                         14           end else if (wr_count == 4'he && rd_count == 4'hf) begin

    134             1                        967           end else begin

Branch totals: 5 hits of 5 branches = 100.00%

------------------------------------IF Branch------------------------------------
    73                                       220     Count coming in to IF
    73              1                    ***0***             if (should_read && addr_received && rd_count == 4'hf) begin

                                             220     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    76                                       220     Count coming in to IF
    76              1                          3             if (should_read && !addr_received && wr_count == 4'hf) begin

                                             217     All False Count
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    91                                      8585     Count coming in to IF
    91              1                        119             if (should_read && addr_received && wr_count == 4'he && seq_item_chk.tx_valid && rd_count != 0) begin

    101             1                         14             end else if (last_read) begin

    111             1                       6457             end else if (wr_count != 4'he) begin

                                            1995     All False Count
Branch totals: 4 hits of 4 branches = 100.00%

------------------------------------IF Branch------------------------------------
    95                                       119     Count coming in to IF
    95              1                         14               if (rd_count == 0) begin

                                             105     All False Count
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    102                                       14     Count coming in to IF
    102             1                         14               if (seq_item_chk.tx_valid) begin

                                         ***0***     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    106                                       14     Count coming in to IF
    106             1                         14               if (rd_count == 4'hf) begin

                                         ***0***     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    114                                     6457     Count coming in to IF
    114             1                        473               if (wr_count == 4'he) begin

                                            5984     All False Count
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    115                                      473     Count coming in to IF
    115             1                        369                 if (!should_read || !addr_received) begin

                                             104     All False Count
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    120                                      473     Count coming in to IF
    120             1                        130                 if (should_read && !addr_received) begin

                                             343     All False Count
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    137                                      967     Count coming in to IF
    137             1                        765             if (start_countdown == 0) begin

                                             202     All False Count
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    146                                        1     Count coming in to IF
    146             1                          1           `uvm_info("report phase", $sformatf("Total successful transactions: %0d", correct_count),

                                         ***0***     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    148                                        1     Count coming in to IF
    148             1                          1           `uvm_info("report phase", $sformatf("Total failed transactions: %0d", error_count),

                                         ***0***     All False Count
Branch totals: 1 hit of 2 branches = 50.00%


Condition Coverage:
    Enabled Coverage              Bins   Covered    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Conditions                      25        17         8    68.00%

================================Condition Details================================

Condition Coverage for instance /slave_scoreboard_pkg --

  File slave_scoreboard.sv
----------------Focused Condition View-------------------
Line       47 Item    1  ((this.rx_data_ref !== this.seq_item.rx_data) || (this.MISO_ref !== this.seq_item.MISO))
Condition totals: 0 of 2 input terms covered = 0.00%

                                    Input Term   Covered  Reason for no coverage   Hint
                                   -----------  --------  -----------------------  --------------
  (this.rx_data_ref !== this.seq_item.rx_data)         N  '_1' not hit             Hit '_1'
        (this.MISO_ref !== this.seq_item.MISO)         N  '_1' not hit             Hit '_1'

     Rows:       Hits  FEC Target                                      Non-masking condition(s)      
 ---------  ---------  --------------------                            -------------------------     
  Row   1:          1  (this.rx_data_ref !== this.seq_item.rx_data)_0  ~(this.MISO_ref !== this.seq_item.MISO)
  Row   2:    ***0***  (this.rx_data_ref !== this.seq_item.rx_data)_1  -                             
  Row   3:          1  (this.MISO_ref !== this.seq_item.MISO)_0        ~(this.rx_data_ref !== this.seq_item.rx_data)
  Row   4:    ***0***  (this.MISO_ref !== this.seq_item.MISO)_1        ~(this.rx_data_ref !== this.seq_item.rx_data)

----------------Focused Condition View-------------------
Line       73 Item    1  (this.should_read && this.addr_received && (this.rd_count == 15))
Condition totals: 0 of 3 input terms covered = 0.00%

             Input Term   Covered  Reason for no coverage   Hint
            -----------  --------  -----------------------  --------------
       this.should_read         N  '_1' not hit             Hit '_1'
     this.addr_received         N  '_1' not hit             Hit '_1'
  (this.rd_count == 15)         N  '_1' not hit             Hit '_1'

     Rows:       Hits  FEC Target               Non-masking condition(s)      
 ---------  ---------  --------------------     -------------------------     
  Row   1:          1  this.should_read_0       -                             
  Row   2:    ***0***  this.should_read_1       (this.addr_received && (this.rd_count == 15))
  Row   3:          1  this.addr_received_0     this.should_read              
  Row   4:    ***0***  this.addr_received_1     (this.should_read && (this.rd_count == 15))
  Row   5:          1  (this.rd_count == 15)_0  (this.should_read && this.addr_received)
  Row   6:    ***0***  (this.rd_count == 15)_1  (this.should_read && this.addr_received)

----------------Focused Condition View-------------------
Line       76 Item    1  (this.should_read && ~this.addr_received && (this.wr_count == 15))
Condition totals: 3 of 3 input terms covered = 100.00%

             Input Term   Covered  Reason for no coverage   Hint
            -----------  --------  -----------------------  --------------
       this.should_read         Y
     this.addr_received         Y
  (this.wr_count == 15)         Y

     Rows:       Hits  FEC Target               Non-masking condition(s)      
 ---------  ---------  --------------------     -------------------------     
  Row   1:          1  this.should_read_0       -                             
  Row   2:          1  this.should_read_1       (~this.addr_received && (this.wr_count == 15))
  Row   3:          1  this.addr_received_0     (this.should_read && (this.wr_count == 15))
  Row   4:          1  this.addr_received_1     this.should_read              
  Row   5:          1  (this.wr_count == 15)_0  (this.should_read && ~this.addr_received)
  Row   6:          1  (this.wr_count == 15)_1  (this.should_read && ~this.addr_received)

----------------Focused Condition View-------------------
Line       88 Item    1  (this.start_countdown == 0)
Condition totals: 1 of 1 input term covered = 100.00%

                   Input Term   Covered  Reason for no coverage   Hint
                  -----------  --------  -----------------------  --------------
  (this.start_countdown == 0)         Y

     Rows:       Hits  FEC Target                     Non-masking condition(s)      
 ---------  ---------  --------------------           -------------------------     
  Row   1:          1  (this.start_countdown == 0)_0  -                             
  Row   2:          1  (this.start_countdown == 0)_1  -                             

----------------Focused Condition View-------------------
Line       91 Item    1  (this.should_read && this.addr_received && (this.wr_count == 14) && seq_item_chk.tx_valid && (this.rd_count != 0))
Condition totals: 4 of 5 input terms covered = 80.00%

             Input Term   Covered  Reason for no coverage   Hint
            -----------  --------  -----------------------  --------------
       this.should_read         Y
     this.addr_received         Y
  (this.wr_count == 14)         Y
  seq_item_chk.tx_valid         Y
   (this.rd_count != 0)         N  '_0' not hit             Hit '_0'

     Rows:       Hits  FEC Target               Non-masking condition(s)      
 ---------  ---------  --------------------     -------------------------     
  Row   1:          1  this.should_read_0       -                             
  Row   2:          1  this.should_read_1       (this.addr_received && ((this.wr_count == 14) && (seq_item_chk.tx_valid && (this.rd_count != 0))))
  Row   3:          1  this.addr_received_0     this.should_read              
  Row   4:          1  this.addr_received_1     (this.should_read && ((this.wr_count == 14) && (seq_item_chk.tx_valid && (this.rd_count != 0))))
  Row   5:          1  (this.wr_count == 14)_0  (this.should_read && this.addr_received)
  Row   6:          1  (this.wr_count == 14)_1  (this.should_read && this.addr_received && (seq_item_chk.tx_valid && (this.rd_count != 0)))
  Row   7:          1  seq_item_chk.tx_valid_0  (this.should_read && this.addr_received && (this.wr_count == 14))
  Row   8:          1  seq_item_chk.tx_valid_1  (this.should_read && this.addr_received && (this.wr_count == 14) && (this.rd_count != 0))
  Row   9:    ***0***  (this.rd_count != 0)_0   (this.should_read && this.addr_received && (this.wr_count == 14) && seq_item_chk.tx_valid)
 Row   10:          1  (this.rd_count != 0)_1   (this.should_read && this.addr_received && (this.wr_count == 14) && seq_item_chk.tx_valid)

----------------Focused Condition View-------------------
Line       95 Item    1  (this.rd_count == 0)
Condition totals: 1 of 1 input term covered = 100.00%

            Input Term   Covered  Reason for no coverage   Hint
           -----------  --------  -----------------------  --------------
  (this.rd_count == 0)         Y

     Rows:       Hits  FEC Target              Non-masking condition(s)      
 ---------  ---------  --------------------    -------------------------     
  Row   1:          1  (this.rd_count == 0)_0  -                             
  Row   2:          1  (this.rd_count == 0)_1  -                             

----------------Focused Condition View-------------------
Line       106 Item    1  (this.rd_count == 15)
Condition totals: 0 of 1 input term covered = 0.00%

             Input Term   Covered  Reason for no coverage   Hint
            -----------  --------  -----------------------  --------------
  (this.rd_count == 15)         N  '_0' not hit             Hit '_0'

     Rows:       Hits  FEC Target               Non-masking condition(s)      
 ---------  ---------  --------------------     -------------------------     
  Row   1:    ***0***  (this.rd_count == 15)_0  -                             
  Row   2:          1  (this.rd_count == 15)_1  -                             

----------------Focused Condition View-------------------
Line       111 Item    1  (this.wr_count != 14)
Condition totals: 1 of 1 input term covered = 100.00%

             Input Term   Covered  Reason for no coverage   Hint
            -----------  --------  -----------------------  --------------
  (this.wr_count != 14)         Y

     Rows:       Hits  FEC Target               Non-masking condition(s)      
 ---------  ---------  --------------------     -------------------------     
  Row   1:          1  (this.wr_count != 14)_0  -                             
  Row   2:          1  (this.wr_count != 14)_1  -                             

----------------Focused Condition View-------------------
Line       114 Item    1  (this.wr_count == 14)
Condition totals: 1 of 1 input term covered = 100.00%

             Input Term   Covered  Reason for no coverage   Hint
            -----------  --------  -----------------------  --------------
  (this.wr_count == 14)         Y

     Rows:       Hits  FEC Target               Non-masking condition(s)      
 ---------  ---------  --------------------     -------------------------     
  Row   1:          1  (this.wr_count == 14)_0  -                             
  Row   2:          1  (this.wr_count == 14)_1  -                             

----------------Focused Condition View-------------------
Line       115 Item    1  (~this.should_read || ~this.addr_received)
Condition totals: 2 of 2 input terms covered = 100.00%

          Input Term   Covered  Reason for no coverage   Hint
         -----------  --------  -----------------------  --------------
    this.should_read         Y
  this.addr_received         Y

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:          1  this.should_read_0    -                             
  Row   2:          1  this.should_read_1    this.addr_received            
  Row   3:          1  this.addr_received_0  this.should_read              
  Row   4:          1  this.addr_received_1  this.should_read              

----------------Focused Condition View-------------------
Line       120 Item    1  (this.should_read && ~this.addr_received)
Condition totals: 2 of 2 input terms covered = 100.00%

          Input Term   Covered  Reason for no coverage   Hint
         -----------  --------  -----------------------  --------------
    this.should_read         Y
  this.addr_received         Y

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:          1  this.should_read_0    -                             
  Row   2:          1  this.should_read_1    ~this.addr_received           
  Row   3:          1  this.addr_received_0  this.should_read              
  Row   4:          1  this.addr_received_1  this.should_read              

----------------Focused Condition View-------------------
Line       127 Item    1  ((this.wr_count == 14) && (this.rd_count == 15))
Condition totals: 1 of 2 input terms covered = 50.00%

             Input Term   Covered  Reason for no coverage   Hint
            -----------  --------  -----------------------  --------------
  (this.wr_count == 14)         Y
  (this.rd_count == 15)         N  '_0' not hit             Hit '_0'

     Rows:       Hits  FEC Target               Non-masking condition(s)      
 ---------  ---------  --------------------     -------------------------     
  Row   1:          1  (this.wr_count == 14)_0  -                             
  Row   2:          1  (this.wr_count == 14)_1  (this.rd_count == 15)         
  Row   3:    ***0***  (this.rd_count == 15)_0  (this.wr_count == 14)         
  Row   4:          1  (this.rd_count == 15)_1  (this.wr_count == 14)         

----------------Focused Condition View-------------------
Line       137 Item    1  (this.start_countdown == 0)
Condition totals: 1 of 1 input term covered = 100.00%

                   Input Term   Covered  Reason for no coverage   Hint
                  -----------  --------  -----------------------  --------------
  (this.start_countdown == 0)         Y

     Rows:       Hits  FEC Target                     Non-masking condition(s)      
 ---------  ---------  --------------------           -------------------------     
  Row   1:          1  (this.start_countdown == 0)_0  -                             
  Row   2:          1  (this.start_countdown == 0)_1  -                             


Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                      59        53         6    89.83%

================================Statement Details================================

Statement Coverage for instance /slave_scoreboard_pkg --

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File slave_scoreboard.sv
    1                                                package slave_scoreboard_pkg;

    2                                                  import uvm_pkg::*;

    3                                                  import slave_seq_item_pkg::*;

    4                                                  `include "uvm_macros.svh"

    5                                                

    6                                                  class slave_scoreboard extends uvm_scoreboard;

    7               1                    ***0***         `uvm_component_utils(slave_scoreboard)

    7               2                    ***0***     
    7               3                          2     
    8                                                

    9                                                    uvm_analysis_export #(slave_seq_item) sb_export;

    10                                                   uvm_tlm_analysis_fifo #(slave_seq_item) sb_fifo;

    11                                                   slave_seq_item seq_item;

    12                                               

    13                                                   logic MISO_ref;

    14                                                   logic [9:0] rx_data_ref;

    15                                                   bit [1:0] start_countdown;

    16                                                   bit should_read;

    17                                                   bit addr_received;

    18                                                   bit SS_n_delayed;

    19                                                   bit last_read;

    20                                                   bit [3:0] wr_count, rd_count;

    21                                               

    22                                               

    23                                                   int correct_count, error_count;

    24                                               

    25                                                   function new(string name = "slave_scoreboard", uvm_component parent = null);

    26              1                          1           super.new(name, parent);

    27                                                   endfunction  //new()

    28                                               

    29                                               

    30                                               

    31                                                   virtual function void build_phase(uvm_phase phase);

    32              1                          1           super.build_phase(phase);

    33              1                          1           sb_export = new("sb_export", this);

    34              1                          1           sb_fifo   = new("sb_fifo", this);

    35                                                   endfunction

    36                                               

    37                                                   virtual function void connect_phase(uvm_phase phase);

    38              1                          1           super.connect_phase(phase);

    39              1                          1           sb_export.connect(sb_fifo.analysis_export);

    40                                                   endfunction

    41                                               

    42                                                   virtual task run_phase(uvm_phase phase);

    43              1                          1           super.run_phase(phase);

    44              1                          1           forever begin

    45              1                      10002             sb_fifo.get(seq_item);

    46              1                      10001             ref_model(seq_item);

    47                                                       if (rx_data_ref !== seq_item.rx_data || MISO_ref !== seq_item.MISO) begin

    48              1                    ***0***               `uvm_error("run_phase", $sformatf(

    49                                                                                     "Comparison failed: %s, MISO_ref = %b, rx_data_ref = %h",

    50                                                                                     seq_item.convert2string(), MISO_ref, rx_data_ref))

    51              1                    ***0***               error_count++;

    52                                                       end else begin

    53              1                    ***0***               `uvm_info("run_phase", $sformatf("Comparison succeeded: %s", seq_item.convert2string()),

    54                                                                   UVM_HIGH)

    55              1                      10001               correct_count++;

    56                                                       end

    57                                                     end

    58                                                   endtask  //

    59                                               

    60                                                   virtual task ref_model(slave_seq_item seq_item_chk);

    61                                                     if (!seq_item_chk.rst_n) begin

    62                                                       // wait two cycles before sending data

    63              1                        215             start_countdown = 2;

    64                                                       // reset immediately in same cycle

    65              1                        215             wr_count = 9;

    66              1                        215             rd_count = 7;

    67              1                        215             rx_data_ref = 0;

    68              1                        215             MISO_ref = 0;

    69              1                        215             should_read = 0;

    70              1                        215             addr_received = 0;

    71              1                        215             last_read = 0;

    72                                                     end else if (SS_n_delayed) begin

    73                                                       if (should_read && addr_received && rd_count == 4'hf) begin

    74              1                    ***0***               addr_received = 0;

    75                                                       end

    76                                                       if (should_read && !addr_received && wr_count == 4'hf) begin

    77              1                          3               addr_received = 1;

    78                                                       end

    79                                                       // wait just one cycle before sending data

    80              1                        220             start_countdown = 1;

    81                                                       // reset one cycle later

    82              1                        220             wr_count = 9;

    83              1                        220             rd_count = 7;

    84              1                        220             rx_data_ref = 0;

    85              1                        220             MISO_ref = 0;

    86              1                        220             should_read = 0;

    87              1                        220             last_read = 0;

    88                                                     end else if (start_countdown == 0) begin

    89                                                       // handle read operation

    90                                                       // operation is read, dummy data written, and data to be read is ready, then read.

    91                                                       if (should_read && addr_received && wr_count == 4'he && seq_item_chk.tx_valid && rd_count != 0) begin

    92              1                        119               MISO_ref = seq_item_chk.tx_data[rd_count];

    93              1                        119               rd_count = rd_count - 1;

    94                                                         // sequence of data is finished in read operation

    95                                                         if (rd_count == 0) begin

    96              1                         14                 last_read = 1;

    97              1                         14                 addr_received = 0;

    98                                                         end

    99                                               

    100                                                        // handle last read operation

    101                                                      end else if (last_read) begin

    102                                                        if (seq_item_chk.tx_valid) begin

    103             1                         14                 MISO_ref = seq_item_chk.tx_data[rd_count];

    104                                                        end

    105             1                         14               rd_count = rd_count - 1;

    106                                                        if (rd_count == 4'hf) begin

    107             1                         14                 start_countdown = 1;

    108                                                        end

    109                                              

    110                                                        // handle write operation

    111                                                      end else if (wr_count != 4'he) begin

    112             1                       6457               rx_data_ref[wr_count] = seq_item_chk.MOSI;

    113             1                       6457               wr_count = wr_count - 1;

    114                                                        if (wr_count == 4'he) begin

    115                                                          if (!should_read || !addr_received) begin

    116             1                        369                   wr_count = 9;

    117             1                        369                   rx_data_ref = 0;

    118             1                        369                   start_countdown = 1;

    119                                                          end

    120                                                          if (should_read && !addr_received) begin

    121             1                        130                   addr_received = 1;

    122                                                          end

    123                                                        end

    124                                                      end

    125                                              

    126                                                      // automatic reset after complete read-write cycle

    127                                                    end else if (wr_count == 4'he && rd_count == 4'hf) begin

    128             1                         14             wr_count = 9;

    129             1                         14             rd_count = 7;

    130             1                         14             rx_data_ref = 0;

    131             1                         14             MISO_ref = 0;

    132             1                         14             should_read = 0;

    133             1                         14             last_read = 0;

    134                                                    end else begin

    135                                                      // delay before writing data

    136             1                        967             start_countdown -= 1;

    137                                                      if (start_countdown == 0) begin

    138             1                        765               should_read = seq_item_chk.MOSI;

    139                                                      end

    140                                                    end

    141             1                      10001           SS_n_delayed = seq_item_chk.SS_n;

    142                                                  endtask  //

    143                                              

    144                                                  virtual function void report_phase(uvm_phase phase);

    145             1                          1           super.report_phase(phase);

    146             1                          1           `uvm_info("report phase", $sformatf("Total successful transactions: %0d", correct_count),

    147                                                              UVM_MEDIUM)

    148             1                          1           `uvm_info("report phase", $sformatf("Total failed transactions: %0d", error_count),



=================================================================================
=== Instance: /slave_coverage_pkg
=== Design Unit: work.slave_coverage_pkg
=================================================================================

Covergroup Coverage:
    Covergroups                      1        na        na   100.00%
        Coverpoints/Crosses          8        na        na        na
            Covergroup Bins         27        27         0   100.00%
----------------------------------------------------------------------------------------------------------
Covergroup                                             Metric       Goal       Bins    Status               
                                                                                                         
----------------------------------------------------------------------------------------------------------
 TYPE /slave_coverage_pkg/slave_coverage/cvr_gp       100.00%        100          -    Covered              
    covered/total bins:                                    27         27          -                      
    missing/total bins:                                     0         27          -                      
    % Hit:                                            100.00%        100          -                      
    Coverpoint slave_select_cp                        100.00%        100          -    Covered              
        covered/total bins:                                 2          2          -                      
        missing/total bins:                                 0          2          -                      
        % Hit:                                        100.00%        100          -                      
    Coverpoint MISO_cp                                100.00%        100          -    Covered              
        covered/total bins:                                 2          2          -                      
        missing/total bins:                                 0          2          -                      
        % Hit:                                        100.00%        100          -                      
    Coverpoint rx_opcode_cp                           100.00%        100          -    Covered              
        covered/total bins:                                 6          6          -                      
        missing/total bins:                                 0          6          -                      
        % Hit:                                        100.00%        100          -                      
    Coverpoint rx_valid_cp                            100.00%        100          -    Covered              
        covered/total bins:                                 2          2          -                      
        missing/total bins:                                 0          2          -                      
        % Hit:                                        100.00%        100          -                      
    Coverpoint tx_valid_cp                            100.00%        100          -    Covered              
        covered/total bins:                                 2          2          -                      
        missing/total bins:                                 0          2          -                      
        % Hit:                                        100.00%        100          -                      
    Coverpoint tx_data_cp                             100.00%        100          -    Covered              
        covered/total bins:                                 1          1          -                      
        missing/total bins:                                 0          1          -                      
        % Hit:                                        100.00%        100          -                      
    Cross rx_opcode_valid                             100.00%        100          -    Covered              
        covered/total bins:                                10         10          -                      
        missing/total bins:                                 0         10          -                      
        % Hit:                                        100.00%        100          -                      
    Cross tx_data_valid                               100.00%        100          -    Covered              
        covered/total bins:                                 2          2          -                      
        missing/total bins:                                 0          2          -                      
        % Hit:                                        100.00%        100          -                      
 Covergroup instance \/slave_coverage_pkg::slave_coverage::cvr_gp  
                                                      100.00%        100          -    Covered              
    covered/total bins:                                    27         27          -                      
    missing/total bins:                                     0         27          -                      
    % Hit:                                            100.00%        100          -                      
    Coverpoint slave_select_cp                        100.00%        100          -    Covered              
        covered/total bins:                                 2          2          -                      
        missing/total bins:                                 0          2          -                      
        % Hit:                                        100.00%        100          -                      
        bin selected                                     9772          1          -    Covered              
        bin not_selected                                  229          1          -    Covered              
    Coverpoint MISO_cp                                100.00%        100          -    Covered              
        covered/total bins:                                 2          2          -                      
        missing/total bins:                                 0          2          -                      
        % Hit:                                        100.00%        100          -                      
        bin high                                           38          1          -    Covered              
        bin low                                          9917          1          -    Covered              
    Coverpoint rx_opcode_cp                           100.00%        100          -    Covered              
        covered/total bins:                                 6          6          -                      
        missing/total bins:                                 0          6          -                      
        % Hit:                                        100.00%        100          -                      
        bin wr_addr                                      4076          1          -    Covered              
        bin wr_op                                        1868          1          -    Covered              
        bin rd_addr                                      2386          1          -    Covered              
        bin rd_op                                        1671          1          -    Covered              
        bin comp_rd_op                                    170          1          -    Covered              
        bin comp_wr_op                                    181          1          -    Covered              
    Coverpoint rx_valid_cp                            100.00%        100          -    Covered              
        covered/total bins:                                 2          2          -                      
        missing/total bins:                                 0          2          -                      
        % Hit:                                        100.00%        100          -                      
        bin valid                                         382          1          -    Covered              
        bin invalid                                      9619          1          -    Covered              
    Coverpoint tx_valid_cp                            100.00%        100          -    Covered              
        covered/total bins:                                 2          2          -                      
        missing/total bins:                                 0          2          -                      
        % Hit:                                        100.00%        100          -                      
        bin valid                                        1520          1          -    Covered              
        bin invalid                                      8481          1          -    Covered              
    Coverpoint tx_data_cp                             100.00%        100          -    Covered              
        covered/total bins:                                 1          1          -                      
        missing/total bins:                                 0          1          -                      
        % Hit:                                        100.00%        100          -                      
        bin any_data                                     9150          1          -    Covered              
    Cross rx_opcode_valid                             100.00%        100          -    Covered              
        covered/total bins:                                10         10          -                      
        missing/total bins:                                 0         10          -                      
        % Hit:                                        100.00%        100          -                      
        Auto, Default and User Defined Bins:
            bin <comp_wr_op,invalid>                      181          1          -    Covered              
            bin <comp_rd_op,invalid>                      170          1          -    Covered              
            bin <rd_op,invalid>                          1575          1          -    Covered              
            bin <wr_op,invalid>                          1765          1          -    Covered              
            bin <rd_addr,invalid>                        2294          1          -    Covered              
            bin <wr_addr,invalid>                        3985          1          -    Covered              
            bin <rd_op,valid>                              96          1          -    Covered              
            bin <wr_op,valid>                             103          1          -    Covered              
            bin <rd_addr,valid>                            92          1          -    Covered              
            bin <wr_addr,valid>                            91          1          -    Covered              
        Illegal and Ignore Bins:
            ignore_bin complete_valid_write                 0                     -    ZERO                 
            ignore_bin complete_valid_read                  0                     -    ZERO                 
    Cross tx_data_valid                               100.00%        100          -    Covered              
        covered/total bins:                                 2          2          -                      
        missing/total bins:                                 0          2          -                      
        % Hit:                                        100.00%        100          -                      
        Auto, Default and User Defined Bins:
            bin <any_data,invalid>                       8066          1          -    Covered              
            bin <any_data,valid>                         1084          1          -    Covered              
Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                      14        12         2    85.71%

================================Statement Details================================

Statement Coverage for instance /slave_coverage_pkg --

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File slave_coverage.sv
    1                                                package slave_coverage_pkg;

    2                                                  import uvm_pkg::*;

    3                                                  import slave_seq_item_pkg::*;

    4                                                  `include "uvm_macros.svh"

    5                                                

    6                                                  class slave_coverage extends uvm_component;

    7               1                    ***0***         `uvm_component_utils(slave_coverage)

    7               2                    ***0***     
    7               3                          2     
    8                                                

    9                                                    slave_seq_item seq_item;

    10                                                   uvm_analysis_export #(slave_seq_item) cov_export;

    11                                                   uvm_tlm_analysis_fifo #(slave_seq_item) cov_fifo;

    12                                               

    13                                                   covergroup cvr_gp;

    14                                                     option.per_instance = 1;

    15                                                     slave_select_cp: coverpoint seq_item.SS_n {

    16                                                       // selected bin

    17                                                       bins selected = {1'b0};

    18                                                       // not selected bin

    19                                                       bins not_selected = {1'b1};

    20                                                     }

    21                                               

    22                                                     MISO_cp: coverpoint seq_item.MISO {

    23                                                       // high bin

    24                                                       bins high = {1'b1};

    25                                                       // low bin

    26                                                       bins low = {1'b0};

    27                                                     }

    28                                               

    29                                                     rx_opcode_cp: coverpoint seq_item.rx_data[9:8] {

    30                                                       bins wr_addr = {2'b00};

    31                                                       bins wr_op = {2'b01};

    32                                                       bins rd_addr = {2'b10};

    33                                                       bins rd_op = {2'b11};

    34                                                       bins comp_rd_op = (2'b10 => 2'b11);

    35                                                       bins comp_wr_op = (2'b00 => 2'b01);

    36                                                     //option.weight = 0;

    37                                                     }

    38                                               

    39                                                     rx_valid_cp: coverpoint seq_item.rx_valid {

    40                                                       // valid bin

    41                                                       bins valid = {1'b1};

    42                                                       // invalid bin

    43                                                       bins invalid = {1'b0};

    44                                                     }

    45                                               

    46                                                     tx_valid_cp: coverpoint seq_item.tx_valid {

    47                                                       // valid bin

    48                                                       bins valid = {1'b1};

    49                                                       // invalid bin

    50                                                       bins invalid = {1'b0};

    51                                                     //option.weight = 0;

    52                                                     }

    53                                               

    54                                                     tx_data_cp: coverpoint seq_item.tx_data {

    55                                                       // bin for all values

    56                                                       bins any_data = {[0 : 255]};

    57                                                     //option.weight = 0;

    58                                                     }

    59                                               

    60                                                     rx_opcode_valid: cross rx_opcode_cp, rx_valid_cp{

    61                                                       ignore_bins complete_valid_read = binsof(rx_opcode_cp.comp_rd_op) && binsof(rx_valid_cp.valid);

    62                                                       ignore_bins complete_valid_write = binsof(rx_opcode_cp.comp_wr_op) && binsof(rx_valid_cp.valid);

    63                                                     }

    64                                               

    65                                                     tx_data_valid: cross tx_data_cp, tx_valid_cp;

    66                                               

    67                                                   endgroup

    68                                               

    69                                                   function new(string name = "slave_coverage", uvm_component parent = null);

    70              1                          1           super.new(name, parent);

    71              1                          1           cvr_gp = new();

    72                                                   endfunction  //new()

    73                                               

    74                                                   virtual function void build_phase(uvm_phase phase);

    75              1                          1           super.build_phase(phase);

    76              1                          1           cov_export = new("cov_export", this);

    77              1                          1           cov_fifo   = new("cov_fifo", this);

    78                                                   endfunction

    79                                               

    80                                                   virtual function void connect_phase(uvm_phase phase);

    81              1                          1           super.connect_phase(phase);

    82              1                          1           cov_export.connect(cov_fifo.analysis_export);

    83                                                   endfunction

    84                                               

    85                                               

    86                                                   virtual task run_phase(uvm_phase phase);

    87              1                          1           super.run_phase(phase);

    88              1                          1           forever begin

    89              1                      10002             cov_fifo.get(seq_item);

    90              1                      10001             cvr_gp.sample();



=================================================================================
=== Instance: /slave_env_pkg
=== Design Unit: work.slave_env_pkg
=================================================================================
Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                      10         8         2    80.00%

================================Statement Details================================

Statement Coverage for instance /slave_env_pkg --

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File slave_env.sv
    1                                                package slave_env_pkg;

    2                                                  import slave_coverage_pkg::*;

    3                                                  import slave_scoreboard_pkg::*;

    4                                                  import slave_agent_pkg::*;

    5                                                  import uvm_pkg::*;

    6                                                  `include "uvm_macros.svh"

    7                                                

    8                                                  class slave_env extends uvm_env;

    9               1                    ***0***         `uvm_component_utils(slave_env)

    9               2                    ***0***     
    9               3                          2     
    10                                               

    11                                                   slave_agent agt;

    12                                                   slave_coverage cov;

    13                                                   slave_scoreboard sb;

    14                                               

    15                                                   function new(string name = "slave_env", uvm_component parent = null);

    16              1                          1           super.new(name, parent);

    17                                                   endfunction  //new()

    18                                               

    19                                                   virtual function void build_phase(uvm_phase phase);

    20              1                          1           super.build_phase(phase);

    21              1                          1           agt = slave_agent::type_id::create("agt", this);

    22              1                          1           cov = slave_coverage::type_id::create("cov", this);

    23              1                          1           sb  = slave_scoreboard::type_id::create("sb", this);

    24                                                   endfunction

    25                                               

    26                                                   virtual function void connect_phase(uvm_phase phase);

    27              1                          1           agt.agt_ap.connect(sb.sb_export);

    28              1                          1           agt.agt_ap.connect(cov.cov_export);



=================================================================================
=== Instance: /ram_seq_item_pkg
=== Design Unit: work.ram_seq_item_pkg
=================================================================================
Branch Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Branches                        10         0        10     0.00%

================================Branch Details================================

Branch Coverage for instance /ram_seq_item_pkg

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File ram_seq_item.sv
------------------------------------IF Branch------------------------------------
    6                                    ***0***     Count coming in to IF
    6               1                    ***0***         `uvm_object_utils(ram_seq_item)

                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    6                                    ***0***     Count coming in to IF
    6               2                    ***0***         `uvm_object_utils(ram_seq_item)

                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    6                                    ***0***     Count coming in to IF
    6               3                    ***0***         `uvm_object_utils(ram_seq_item)

    6               4                    ***0***         `uvm_object_utils(ram_seq_item)

Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    6                                    ***0***     Count coming in to IF
    6               5                    ***0***         `uvm_object_utils(ram_seq_item)

                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    6                                    ***0***     Count coming in to IF
    6               6                    ***0***         `uvm_object_utils(ram_seq_item)

                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%


Condition Coverage:
    Enabled Coverage              Bins   Covered    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Conditions                       2         0         2     0.00%

================================Condition Details================================

Condition Coverage for instance /ram_seq_item_pkg --

  File ram_seq_item.sv
----------------Focused Condition View-------------------
Line       6 Item    1  (name != 0)
Condition totals: 0 of 1 input term covered = 0.00%

   Input Term   Covered  Reason for no coverage   Hint
  -----------  --------  -----------------------  --------------
  (name != 0)         N  No hits                  Hit '_0' and '_1'

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:    ***0***  (name != 0)_0         -                             
  Row   2:    ***0***  (name != 0)_1         -                             

----------------Focused Condition View-------------------
Line       6 Item    2  (tmp_data__ != null)
Condition totals: 0 of 1 input term covered = 0.00%

            Input Term   Covered  Reason for no coverage   Hint
           -----------  --------  -----------------------  --------------
  (tmp_data__ != null)         N  No hits                  Hit '_0' and '_1'

     Rows:       Hits  FEC Target              Non-masking condition(s)      
 ---------  ---------  --------------------    -------------------------     
  Row   1:    ***0***  (tmp_data__ != null)_0  -                             
  Row   2:    ***0***  (tmp_data__ != null)_1  -                             


Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                      13         1        12     7.69%

================================Statement Details================================

Statement Coverage for instance /ram_seq_item_pkg --

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File ram_seq_item.sv
    1                                                package ram_seq_item_pkg;

    2                                                  import uvm_pkg::*;

    3                                                  `include "uvm_macros.svh"

    4                                                

    5                                                  class ram_seq_item extends uvm_sequence_item;

    6               1                    ***0***         `uvm_object_utils(ram_seq_item)

    6               2                    ***0***     
    6               3                    ***0***     
    6               4                    ***0***     
    6               5                    ***0***     
    6               6                    ***0***     
    6               7                    ***0***     
    6               8                    ***0***     
    6               9                    ***0***     
    6              10                    ***0***     
    7                                                

    8                                                    rand bit [9:0] din;

    9                                                    rand bit rst_n, rx_valid;

    10                                                   logic [7:0] dout;

    11                                                   logic tx_valid;

    12                                               

    13                                                   function new(string name = "ram_seq_item");

    14              1                      10002           super.new(name);

    15                                                   endfunction  //new()

    16                                               

    17                                                   virtual function string convert2string();

    18              1                    ***0***           return $sformatf(

    19                                                         "%s rst_n = %b, rx_valid = %b, din = %0d, tx_valid = %b, dout = %0d",

    20                                                         super.convert2string(),

    21                                                         rst_n,

    22                                                         rx_valid,

    23                                                         din,

    24                                                         tx_valid,

    25                                                         dout

    26                                                     );

    27                                                   endfunction

    28                                               

    29                                                   virtual function string convert2string_stimulus();

    30              1                    ***0***           return $sformatf("rst_n = %b, rx_valid = %b, din = %0d", rst_n, rx_valid, din);



=================================================================================
=== Instance: /ram_config_pkg
=== Design Unit: work.ram_config_pkg
=================================================================================
Branch Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Branches                        10         0        10     0.00%

================================Branch Details================================

Branch Coverage for instance /ram_config_pkg

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File ram_config.sv
------------------------------------IF Branch------------------------------------
    6                                    ***0***     Count coming in to IF
    6               1                    ***0***         `uvm_object_utils(ram_config)

                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    6                                    ***0***     Count coming in to IF
    6               2                    ***0***         `uvm_object_utils(ram_config)

                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    6                                    ***0***     Count coming in to IF
    6               3                    ***0***         `uvm_object_utils(ram_config)

    6               4                    ***0***         `uvm_object_utils(ram_config)

Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    6                                    ***0***     Count coming in to IF
    6               5                    ***0***         `uvm_object_utils(ram_config)

                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    6                                    ***0***     Count coming in to IF
    6               6                    ***0***         `uvm_object_utils(ram_config)

                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%


Condition Coverage:
    Enabled Coverage              Bins   Covered    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Conditions                       2         0         2     0.00%

================================Condition Details================================

Condition Coverage for instance /ram_config_pkg --

  File ram_config.sv
----------------Focused Condition View-------------------
Line       6 Item    1  (name != 0)
Condition totals: 0 of 1 input term covered = 0.00%

   Input Term   Covered  Reason for no coverage   Hint
  -----------  --------  -----------------------  --------------
  (name != 0)         N  No hits                  Hit '_0' and '_1'

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:    ***0***  (name != 0)_0         -                             
  Row   2:    ***0***  (name != 0)_1         -                             

----------------Focused Condition View-------------------
Line       6 Item    2  (tmp_data__ != null)
Condition totals: 0 of 1 input term covered = 0.00%

            Input Term   Covered  Reason for no coverage   Hint
           -----------  --------  -----------------------  --------------
  (tmp_data__ != null)         N  No hits                  Hit '_0' and '_1'

     Rows:       Hits  FEC Target              Non-masking condition(s)      
 ---------  ---------  --------------------    -------------------------     
  Row   1:    ***0***  (tmp_data__ != null)_0  -                             
  Row   2:    ***0***  (tmp_data__ != null)_1  -                             


Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                      11         1        10     9.09%

================================Statement Details================================

Statement Coverage for instance /ram_config_pkg --

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File ram_config.sv
    1                                                package ram_config_pkg;

    2                                                  import uvm_pkg::*;

    3                                                  `include "uvm_macros.svh"

    4                                                

    5                                                  class ram_config extends uvm_object;

    6               1                    ***0***         `uvm_object_utils(ram_config)

    6               2                    ***0***     
    6               3                    ***0***     
    6               4                    ***0***     
    6               5                    ***0***     
    6               6                    ***0***     
    6               7                    ***0***     
    6               8                    ***0***     
    6               9                    ***0***     
    6              10                    ***0***     
    7                                                

    8                                                    virtual ram_if ram_vif;

    9                                                    uvm_active_passive_enum is_active;

    10                                               

    11                                                   function new(string name = "ram_config");

    12              1                          1           super.new(name);



=================================================================================
=== Instance: /ram_driver_pkg
=== Design Unit: work.ram_driver_pkg
=================================================================================
Branch Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Branches                         2         0         2     0.00%

================================Branch Details================================

Branch Coverage for instance /ram_driver_pkg

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File ram_driver.sv
------------------------------------IF Branch------------------------------------
    29                                   ***0***     Count coming in to IF
    29              1                    ***0***             `uvm_info("run_phase", stim_seq_item.convert2string_stimulus(), UVM_HIGH);

                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%


Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                      14         0        14     0.00%

================================Statement Details================================

Statement Coverage for instance /ram_driver_pkg --

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File ram_driver.sv
    1                                                package ram_driver_pkg;

    2                                                  import uvm_pkg::*;

    3                                                  import ram_config_pkg::*;

    4                                                  import ram_seq_item_pkg::*;

    5                                                  `include "uvm_macros.svh"

    6                                                

    7                                                  class ram_driver extends uvm_driver #(ram_seq_item);

    8               1                    ***0***         `uvm_component_utils(ram_driver);

    8               2                    ***0***     
    8               3                    ***0***     
    9                                                

    10                                                   virtual ram_if ram_vif;

    11                                                   ram_seq_item   stim_seq_item;

    12                                               

    13                                                   function new(string name = "ram_driver", uvm_component parent = null);

    14              1                    ***0***           super.new(name, parent);

    15                                                   endfunction  //new()

    16                                               

    17                                                   virtual task run_phase(uvm_phase phase);

    18              1                    ***0***           super.run_phase(phase);

    19              1                    ***0***           forever begin

    20              1                    ***0***             stim_seq_item = ram_seq_item::type_id::create("stim_seq_item");

    21                                               

    22              1                    ***0***             seq_item_port.get_next_item(stim_seq_item);

    23              1                    ***0***             ram_vif.rst_n = stim_seq_item.rst_n;

    24              1                    ***0***             ram_vif.din = stim_seq_item.din;

    25              1                    ***0***             ram_vif.rx_valid = stim_seq_item.rx_valid;

    26              1                    ***0***             @(negedge ram_vif.clk);

    27              1                    ***0***             seq_item_port.item_done();

    28                                               

    29              1                    ***0***             `uvm_info("run_phase", stim_seq_item.convert2string_stimulus(), UVM_HIGH);



=================================================================================
=== Instance: /ram_sequencer_pkg
=== Design Unit: work.ram_sequencer_pkg
=================================================================================
Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                       4         0         4     0.00%

================================Statement Details================================

Statement Coverage for instance /ram_sequencer_pkg --

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File ram_sqr.sv
    1                                                package ram_sequencer_pkg;

    2                                                  import uvm_pkg::*;

    3                                                  import ram_seq_item_pkg::*;

    4                                                  `include "uvm_macros.svh"

    5                                                

    6                                                  class ram_sequencer extends uvm_sequencer #(ram_seq_item);

    7               1                    ***0***         `uvm_component_utils(ram_sequencer)

    7               2                    ***0***     
    7               3                    ***0***     
    8                                                

    9                                                    function new(string name = "ram_sequencer", uvm_component parent = null);

    10              1                    ***0***           super.new(name, parent);



=================================================================================
=== Instance: /ram_monitor_pkg
=== Design Unit: work.ram_monitor_pkg
=================================================================================
Branch Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Branches                         2         1         1    50.00%

================================Branch Details================================

Branch Coverage for instance /ram_monitor_pkg

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File ram_monitor.sv
------------------------------------IF Branch------------------------------------
    36                                     10001     Count coming in to IF
    36              1                    ***0***             `uvm_info("run_phase", rsp_seq_item.convert2string(), UVM_HIGH)

                                           10001     All False Count
Branch totals: 1 hit of 2 branches = 50.00%


Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                      17        14         3    82.35%

================================Statement Details================================

Statement Coverage for instance /ram_monitor_pkg --

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File ram_monitor.sv
    1                                                package ram_monitor_pkg;

    2                                                  import ram_seq_item_pkg::*;

    3                                                  import uvm_pkg::*;

    4                                                  `include "uvm_macros.svh"

    5                                                

    6                                                  class ram_monitor extends uvm_monitor;

    7               1                    ***0***         `uvm_component_utils(ram_monitor)

    7               2                    ***0***     
    7               3                          2     
    8                                                

    9                                                    virtual ram_if ram_vif;

    10                                                   ram_seq_item rsp_seq_item;

    11                                                   uvm_analysis_port #(ram_seq_item) mon_ap;

    12                                               

    13                                                   function new(string name = "ram_monitor", uvm_component parent = null);

    14              1                          1           super.new(name, parent);

    15                                                   endfunction  //new()

    16                                               

    17                                                   virtual function void build_phase(uvm_phase phase);

    18              1                          1           super.build_phase(phase);

    19              1                          1           mon_ap = new("mon_ap", this);

    20                                                   endfunction

    21                                               

    22                                                   virtual task run_phase(uvm_phase phase);

    23              1                          1           super.run_phase(phase);

    24                                               

    25              1                          1           forever begin

    26              1                      10002             rsp_seq_item = ram_seq_item::type_id::create("rsp_seq_item");

    27                                               

    28              1                      10002             @(negedge ram_vif.clk);

    29              1                      10001             rsp_seq_item.rst_n    = ram_vif.rst_n;

    30              1                      10001             rsp_seq_item.din      = ram_vif.din;

    31              1                      10001             rsp_seq_item.rx_valid = ram_vif.rx_valid;

    32              1                      10001             rsp_seq_item.tx_valid = ram_vif.tx_valid;

    33              1                      10001             rsp_seq_item.dout     = ram_vif.dout;

    34                                               

    35              1                      10001             mon_ap.write(rsp_seq_item);

    36              1                    ***0***             `uvm_info("run_phase", rsp_seq_item.convert2string(), UVM_HIGH)



=================================================================================
=== Instance: /ram_agent_pkg
=== Design Unit: work.ram_agent_pkg
=================================================================================
Branch Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Branches                         8         3         5    37.50%

================================Branch Details================================

Branch Coverage for instance /ram_agent_pkg

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File ram_agent.sv
------------------------------------IF Branch------------------------------------
    26                                         1     Count coming in to IF
    26              1                    ***0***           if (!uvm_config_db#(ram_config)::get(this, "", "ram_CFG", ram_cfg)) begin

                                               1     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    27                                   ***0***     Count coming in to IF
    27              1                    ***0***             `uvm_fatal("build_phase",

                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    31                                         1     Count coming in to IF
    31              1                    ***0***           if (ram_cfg.is_active == UVM_ACTIVE) begin

                                               1     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    41                                         1     Count coming in to IF
    41              1                    ***0***           if (ram_cfg.is_active == UVM_ACTIVE) begin

                                               1     All False Count
Branch totals: 1 hit of 2 branches = 50.00%


Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                      14         7         7    50.00%

================================Statement Details================================

Statement Coverage for instance /ram_agent_pkg --

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File ram_agent.sv
    1                                                package ram_agent_pkg;

    2                                                  import uvm_pkg::*;

    3                                                  import ram_seq_item_pkg::*;

    4                                                  import ram_monitor_pkg::*;

    5                                                  import ram_config_pkg::*;

    6                                                  import ram_sequencer_pkg::*;

    7                                                  import ram_driver_pkg::*;

    8                                                  `include "uvm_macros.svh"

    9                                                

    10                                                 class ram_agent extends uvm_agent;

    11              1                    ***0***         `uvm_component_utils(ram_agent)

    11              2                    ***0***     
    11              3                          2     
    12                                               

    13                                                   ram_driver driver;

    14                                                   ram_sequencer sqr;

    15                                                   ram_monitor mon;

    16                                                   ram_config ram_cfg;

    17                                                   uvm_analysis_port #(ram_seq_item) agt_ap;

    18                                               

    19                                                   function new(string name = "ram_agent", uvm_component parent = null);

    20              1                          1           super.new(name, parent);

    21                                                   endfunction  //new()

    22                                               

    23                                                   virtual function void build_phase(uvm_phase phase);

    24              1                          1           super.build_phase(phase);

    25                                               

    26                                                     if (!uvm_config_db#(ram_config)::get(this, "", "ram_CFG", ram_cfg)) begin

    27              1                    ***0***             `uvm_fatal("build_phase",

    28                                                                  "Agent - Unable to get the configuratoin object of the ram from uvm_config_db")

    29                                                     end

    30                                               

    31                                                     if (ram_cfg.is_active == UVM_ACTIVE) begin

    32              1                    ***0***             driver = ram_driver::type_id::create("driver", this);

    33              1                    ***0***             sqr = ram_sequencer::type_id::create("sqr", this);

    34                                                     end

    35                                               

    36              1                          1           mon = ram_monitor::type_id::create("mon", this);

    37              1                          1           agt_ap = new("agt_ap", this);

    38                                                   endfunction

    39                                               

    40                                                   virtual function void connect_phase(uvm_phase phase);

    41                                                     if (ram_cfg.is_active == UVM_ACTIVE) begin

    42              1                    ***0***             driver.ram_vif = ram_cfg.ram_vif;

    43              1                    ***0***             driver.seq_item_port.connect(sqr.seq_item_export);

    44                                                     end

    45              1                          1           mon.ram_vif = ram_cfg.ram_vif;

    46              1                          1           mon.mon_ap.connect(agt_ap);



=================================================================================
=== Instance: /ram_scoreboard_pkg
=== Design Unit: work.ram_scoreboard_pkg
=================================================================================
Branch Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Branches                        17        11         6    64.70%

================================Branch Details================================

Branch Coverage for instance /ram_scoreboard_pkg

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File ram_scoreboard.sv
------------------------------------IF Branch------------------------------------
    45                                     10001     Count coming in to IF
    45              1                    ***0***             if (seq_item.dout !== dout_ref) begin

    49              1                      10001             end else begin

Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    46                                   ***0***     Count coming in to IF
    46              1                    ***0***               `uvm_error("run_phase", $sformatf("Comparison failed: %s, dout_ref = %0d",

                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    50                                     10001     Count coming in to IF
    50              1                    ***0***               `uvm_info("run_phase", $sformatf("Comparison succeeded: %s", seq_item.convert2string()),

                                           10001     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    58                                     10001     Count coming in to IF
    58              1                        215           if (!seq_item.rst_n) begin

    61              1                       9786           end else begin

Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    62                                      9786     Count coming in to IF
    62              1                        374             if (rx_valid_delayed) begin

                                            9412     All False Count
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------CASE Branch------------------------------------
    63                                       374     Count coming in to CASE
    64              1                        101                 2'b01:   ram[addr] = din_delayed[7:0];

    65              1                         94                 2'b11:   dout_ref = ram[addr];

    66              1                        179                 default: addr = din_delayed[7:0];

Branch totals: 3 hits of 3 branches = 100.00%

------------------------------------IF Branch------------------------------------
    76                                         1     Count coming in to IF
    76              1                          1           `uvm_info("report phase", $sformatf("Total successful transactions: %0d", correct_count),

                                         ***0***     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    78                                         1     Count coming in to IF
    78              1                          1           `uvm_info("report phase", $sformatf("Total failed transactions: %0d", error_count),

                                         ***0***     All False Count
Branch totals: 1 hit of 2 branches = 50.00%


Condition Coverage:
    Enabled Coverage              Bins   Covered    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Conditions                       1         0         1     0.00%

================================Condition Details================================

Condition Coverage for instance /ram_scoreboard_pkg --

  File ram_scoreboard.sv
----------------Focused Condition View-------------------
Line       45 Item    1  (this.seq_item.dout !== this.dout_ref)
Condition totals: 0 of 1 input term covered = 0.00%

                              Input Term   Covered  Reason for no coverage   Hint
                             -----------  --------  -----------------------  --------------
  (this.seq_item.dout !== this.dout_ref)         N  '_1' not hit             Hit '_1'

     Rows:       Hits  FEC Target                                Non-masking condition(s)      
 ---------  ---------  --------------------                      -------------------------     
  Row   1:          1  (this.seq_item.dout !== this.dout_ref)_0  -                             
  Row   2:    ***0***  (this.seq_item.dout !== this.dout_ref)_1  -                             


Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                      27        22         5    81.48%

================================Statement Details================================

Statement Coverage for instance /ram_scoreboard_pkg --

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File ram_scoreboard.sv
    1                                                package ram_scoreboard_pkg;

    2                                                  import uvm_pkg::*;

    3                                                  import ram_seq_item_pkg::*;

    4                                                  `include "uvm_macros.svh"

    5                                                

    6                                                  class ram_scoreboard extends uvm_scoreboard;

    7               1                    ***0***         `uvm_component_utils(ram_scoreboard)

    7               2                    ***0***     
    7               3                          2     
    8                                                

    9                                                    parameter ram_WIDTH = 16;

    10                                                   parameter ram_DEPTH = 8;

    11                                               

    12                                                   uvm_analysis_export #(ram_seq_item) sb_export;

    13                                                   uvm_tlm_analysis_fifo #(ram_seq_item) sb_fifo;

    14                                                   ram_seq_item seq_item;

    15                                               

    16                                                   bit [9:0] din_delayed;

    17                                                   bit rx_valid_delayed;

    18                                                   logic [7:0] dout_ref;

    19                                                   logic [7:0] ram[logic [7:0]];

    20                                                   logic [7:0] addr;

    21                                               

    22                                                   int correct_count, error_count;

    23                                               

    24                                                   function new(string name = "ram_scoreboard", uvm_component parent = null);

    25              1                          1           super.new(name, parent);

    26                                                   endfunction  //new()

    27                                               

    28                                               

    29                                                   virtual function void build_phase(uvm_phase phase);

    30              1                          1           super.build_phase(phase);

    31              1                          1           sb_export = new("sb_export", this);

    32              1                          1           sb_fifo   = new("sb_fifo", this);

    33                                                   endfunction

    34                                               

    35                                                   virtual function void connect_phase(uvm_phase phase);

    36              1                          1           super.connect_phase(phase);

    37              1                          1           sb_export.connect(sb_fifo.analysis_export);

    38                                                   endfunction

    39                                               

    40                                                   virtual task run_phase(uvm_phase phase);

    41              1                          1           super.run_phase(phase);

    42              1                          1           forever begin

    43              1                      10002             sb_fifo.get(seq_item);

    44              1                      10001             ref_model(seq_item);

    45                                                       if (seq_item.dout !== dout_ref) begin

    46              1                    ***0***               `uvm_error("run_phase", $sformatf("Comparison failed: %s, dout_ref = %0d",

    47                                                                                           seq_item.convert2string(), dout_ref))

    48              1                    ***0***               error_count++;

    49                                                       end else begin

    50              1                    ***0***               `uvm_info("run_phase", $sformatf("Comparison succeeded: %s", seq_item.convert2string()),

    51                                                                   UVM_HIGH)

    52              1                      10001               correct_count++;

    53                                                       end

    54                                                     end

    55                                                   endtask  //

    56                                               

    57                                                   virtual task ref_model(ram_seq_item seq_item_chk);

    58                                                     if (!seq_item.rst_n) begin

    59              1                        215             dout_ref = 0;

    60              1                        215             addr = 0;

    61                                                     end else begin

    62                                                       if (rx_valid_delayed) begin

    63                                                         case (din_delayed[9:8])

    64              1                        101                 2'b01:   ram[addr] = din_delayed[7:0];

    65              1                         94                 2'b11:   dout_ref = ram[addr];

    66              1                        179                 default: addr = din_delayed[7:0];

    67                                                         endcase

    68                                                       end

    69                                                     end

    70              1                      10001           din_delayed = seq_item_chk.din;

    71              1                      10001           rx_valid_delayed = seq_item_chk.rx_valid;

    72                                                   endtask  //

    73                                               

    74                                                   virtual function void report_phase(uvm_phase phase);

    75              1                          1           super.report_phase(phase);

    76              1                          1           `uvm_info("report phase", $sformatf("Total successful transactions: %0d", correct_count),

    77                                                               UVM_MEDIUM)

    78              1                          1           `uvm_info("report phase", $sformatf("Total failed transactions: %0d", error_count),



=================================================================================
=== Instance: /ram_coverage_pkg
=== Design Unit: work.ram_coverage_pkg
=================================================================================

Covergroup Coverage:
    Covergroups                      1        na        na   100.00%
        Coverpoints/Crosses          3        na        na        na
            Covergroup Bins         14        14         0   100.00%
----------------------------------------------------------------------------------------------------------
Covergroup                                             Metric       Goal       Bins    Status               
                                                                                                         
----------------------------------------------------------------------------------------------------------
 TYPE /ram_coverage_pkg/ram_coverage/cvr_gp           100.00%        100          -    Covered              
    covered/total bins:                                    14         14          -                      
    missing/total bins:                                     0         14          -                      
    % Hit:                                            100.00%        100          -                      
    Coverpoint opcode                                 100.00%        100          -    Covered              
        covered/total bins:                                 4          4          -                      
        missing/total bins:                                 0          4          -                      
        % Hit:                                        100.00%        100          -                      
        bin wr_addr                                      4076          1          -    Covered              
        bin wr_op                                        1868          1          -    Covered              
        bin rd_addr                                      2386          1          -    Covered              
        bin rd_op                                        1671          1          -    Covered              
    Coverpoint rx_valid                               100.00%        100          -    Covered              
        covered/total bins:                                 2          2          -                      
        missing/total bins:                                 0          2          -                      
        % Hit:                                        100.00%        100          -                      
        bin valid                                         382          1          -    Covered              
        bin not_valid                                    9619          1          -    Covered              
    Cross opcode_valid                                100.00%        100          -    Covered              
        covered/total bins:                                 8          8          -                      
        missing/total bins:                                 0          8          -                      
        % Hit:                                        100.00%        100          -                      
        Auto, Default and User Defined Bins:
            bin <rd_op,not_valid>                        1575          1          -    Covered              
            bin <rd_addr,not_valid>                      2294          1          -    Covered              
            bin <wr_op,not_valid>                        1765          1          -    Covered              
            bin <wr_addr,not_valid>                      3985          1          -    Covered              
            bin <rd_op,valid>                              96          1          -    Covered              
            bin <rd_addr,valid>                            92          1          -    Covered              
            bin <wr_op,valid>                             103          1          -    Covered              
            bin <wr_addr,valid>                            91          1          -    Covered              
 Covergroup instance \/ram_coverage_pkg::ram_coverage::cvr_gp  
                                                      100.00%        100          -    Covered              
    covered/total bins:                                    14         14          -                      
    missing/total bins:                                     0         14          -                      
    % Hit:                                            100.00%        100          -                      
    Coverpoint opcode [1]                             100.00%        100          -    Covered              
        covered/total bins:                                 4          4          -                      
        missing/total bins:                                 0          4          -                      
        % Hit:                                        100.00%        100          -                      
        bin wr_addr                                      4076          1          -    Covered              
        bin wr_op                                        1868          1          -    Covered              
        bin rd_addr                                      2386          1          -    Covered              
        bin rd_op                                        1671          1          -    Covered              
    Coverpoint rx_valid [1]                           100.00%        100          -    Covered              
        covered/total bins:                                 2          2          -                      
        missing/total bins:                                 0          2          -                      
        % Hit:                                        100.00%        100          -                      
        bin valid                                         382          1          -    Covered              
        bin not_valid                                    9619          1          -    Covered              
    Cross opcode_valid                                100.00%        100          -    Covered              
        covered/total bins:                                 8          8          -                      
        missing/total bins:                                 0          8          -                      
        % Hit:                                        100.00%        100          -                      
        Auto, Default and User Defined Bins:
            bin <rd_op,not_valid>                        1575          1          -    Covered              
            bin <rd_addr,not_valid>                      2294          1          -    Covered              
            bin <wr_op,not_valid>                        1765          1          -    Covered              
            bin <wr_addr,not_valid>                      3985          1          -    Covered              
            bin <rd_op,valid>                              96          1          -    Covered              
            bin <rd_addr,valid>                            92          1          -    Covered              
            bin <wr_op,valid>                             103          1          -    Covered              
            bin <wr_addr,valid>                            91          1          -    Covered              
Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                      14        12         2    85.71%

================================Statement Details================================

Statement Coverage for instance /ram_coverage_pkg --

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File ram_coverage.sv
    1                                                package ram_coverage_pkg;

    2                                                  import uvm_pkg::*;

    3                                                  import ram_seq_item_pkg::*;

    4                                                  `include "uvm_macros.svh"

    5                                                

    6                                                  class ram_coverage extends uvm_component;

    7               1                    ***0***         `uvm_component_utils(ram_coverage)

    7               2                    ***0***     
    7               3                          2     
    8                                                

    9                                                    ram_seq_item seq_item;

    10                                                   uvm_analysis_export #(ram_seq_item) cov_export;

    11                                                   uvm_tlm_analysis_fifo #(ram_seq_item) cov_fifo;

    12                                               

    13                                                   covergroup cvr_gp;

    14                                                     option.per_instance = 1;

    15                                                     opcode: coverpoint seq_item.din[9:8] {

    16                                                       bins wr_addr = {2'b00};

    17                                                       bins wr_op = {2'b01};

    18                                                       bins rd_addr = {2'b10};

    19                                                       bins rd_op = {2'b11};

    20                                                       option.weight = 0;

    21                                                     }

    22                                               

    23                                                     rx_valid: coverpoint seq_item.rx_valid {

    24                                                       bins valid = {1'b1}; bins not_valid = {1'b0}; option.weight = 0;

    25                                                     }

    26                                               

    27                                                     opcode_valid: cross opcode, rx_valid;

    28                                               

    29                                                   endgroup

    30                                               

    31                                                   function new(string name = "ram_coverage", uvm_component parent = null);

    32              1                          1           super.new(name, parent);

    33              1                          1           cvr_gp = new();

    34                                                   endfunction  //new()

    35                                               

    36                                                   virtual function void build_phase(uvm_phase phase);

    37              1                          1           super.build_phase(phase);

    38              1                          1           cov_export = new("cov_export", this);

    39              1                          1           cov_fifo   = new("cov_fifo", this);

    40                                                   endfunction

    41                                               

    42                                                   virtual function void connect_phase(uvm_phase phase);

    43              1                          1           super.connect_phase(phase);

    44              1                          1           cov_export.connect(cov_fifo.analysis_export);

    45                                                   endfunction

    46                                               

    47                                               

    48                                                   virtual task run_phase(uvm_phase phase);

    49              1                          1           super.run_phase(phase);

    50              1                          1           forever begin

    51              1                      10002             cov_fifo.get(seq_item);

    52              1                      10001             cvr_gp.sample();



=================================================================================
=== Instance: /ram_env_pkg
=== Design Unit: work.ram_env_pkg
=================================================================================
Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                      10         8         2    80.00%

================================Statement Details================================

Statement Coverage for instance /ram_env_pkg --

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File ram_env.sv
    1                                                package ram_env_pkg;

    2                                                  import ram_coverage_pkg::*;

    3                                                  import ram_scoreboard_pkg::*;

    4                                                  import ram_agent_pkg::*;

    5                                                  import uvm_pkg::*;

    6                                                  `include "uvm_macros.svh"

    7                                                

    8                                                  class ram_env extends uvm_env;

    9               1                    ***0***         `uvm_component_utils(ram_env)

    9               2                    ***0***     
    9               3                          2     
    10                                               

    11                                                   ram_agent agt;

    12                                                   ram_coverage cov;

    13                                                   ram_scoreboard sb;

    14                                               

    15                                                   function new(string name = "ram_env", uvm_component parent = null);

    16              1                          1           super.new(name, parent);

    17                                                   endfunction  //new()

    18                                               

    19                                                   virtual function void build_phase(uvm_phase phase);

    20              1                          1           super.build_phase(phase);

    21              1                          1           agt = ram_agent::type_id::create("agt", this);

    22              1                          1           cov = ram_coverage::type_id::create("cov", this);

    23              1                          1           sb  = ram_scoreboard::type_id::create("sb", this);

    24                                                   endfunction

    25                                               

    26                                                   virtual function void connect_phase(uvm_phase phase);

    27              1                          1           agt.agt_ap.connect(sb.sb_export);

    28              1                          1           agt.agt_ap.connect(cov.cov_export);



=================================================================================
=== Instance: /wrapper_seq_item_pkg
=== Design Unit: work.wrapper_seq_item_pkg
=================================================================================
Branch Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Branches                        10         0        10     0.00%

================================Branch Details================================

Branch Coverage for instance /wrapper_seq_item_pkg

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File wrapper_seq_item.sv
------------------------------------IF Branch------------------------------------
    6                                    ***0***     Count coming in to IF
    6               1                    ***0***         `uvm_object_utils(wrapper_seq_item)

                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    6                                    ***0***     Count coming in to IF
    6               2                    ***0***         `uvm_object_utils(wrapper_seq_item)

                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    6                                    ***0***     Count coming in to IF
    6               3                    ***0***         `uvm_object_utils(wrapper_seq_item)

    6               4                    ***0***         `uvm_object_utils(wrapper_seq_item)

Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    6                                    ***0***     Count coming in to IF
    6               5                    ***0***         `uvm_object_utils(wrapper_seq_item)

                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    6                                    ***0***     Count coming in to IF
    6               6                    ***0***         `uvm_object_utils(wrapper_seq_item)

                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%


Condition Coverage:
    Enabled Coverage              Bins   Covered    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Conditions                       2         0         2     0.00%

================================Condition Details================================

Condition Coverage for instance /wrapper_seq_item_pkg --

  File wrapper_seq_item.sv
----------------Focused Condition View-------------------
Line       6 Item    1  (name != 0)
Condition totals: 0 of 1 input term covered = 0.00%

   Input Term   Covered  Reason for no coverage   Hint
  -----------  --------  -----------------------  --------------
  (name != 0)         N  No hits                  Hit '_0' and '_1'

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:    ***0***  (name != 0)_0         -                             
  Row   2:    ***0***  (name != 0)_1         -                             

----------------Focused Condition View-------------------
Line       6 Item    2  (tmp_data__ != null)
Condition totals: 0 of 1 input term covered = 0.00%

            Input Term   Covered  Reason for no coverage   Hint
           -----------  --------  -----------------------  --------------
  (tmp_data__ != null)         N  No hits                  Hit '_0' and '_1'

     Rows:       Hits  FEC Target              Non-masking condition(s)      
 ---------  ---------  --------------------    -------------------------     
  Row   1:    ***0***  (tmp_data__ != null)_0  -                             
  Row   2:    ***0***  (tmp_data__ != null)_1  -                             


Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                      13         2        11    15.38%

================================Statement Details================================

Statement Coverage for instance /wrapper_seq_item_pkg --

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File wrapper_seq_item.sv
    1                                                package wrapper_seq_item_pkg;

    2                                                  import uvm_pkg::*;

    3                                                  `include "uvm_macros.svh"

    4                                                

    5                                                  class wrapper_seq_item extends uvm_sequence_item;

    6               1                    ***0***         `uvm_object_utils(wrapper_seq_item)

    6               2                    ***0***     
    6               3                    ***0***     
    6               4                    ***0***     
    6               5                    ***0***     
    6               6                      10001     
    6               7                    ***0***     
    6               8                    ***0***     
    6               9                    ***0***     
    6              10                    ***0***     
    7                                                

    8                                                    rand bit MOSI, SS_n;

    9                                                    rand bit rst_n;

    10                                                   logic MISO;

    11                                               

    12                                                   // bit mosi_seq[$];

    13                                               

    14                                                   function new(string name = "wrapper_seq_item");

    15              1                      30005           super.new(name);

    16                                                   endfunction  //new()

    17                                               

    18                                                   virtual function string convert2string();

    19              1                    ***0***           return $sformatf(

    20                                                         "%s rst_n = %b, SS_n = %b, MOSI = %b, MISO = %b",

    21                                                         super.convert2string(),

    22                                                         rst_n,

    23                                                         SS_n,

    24                                                         MOSI,

    25                                                         MISO

    26                                                     );

    27                                                   endfunction

    28                                               

    29                                                   virtual function string convert2string_stimulus();

    30              1                    ***0***           return $sformatf("%s rst_n = %b, SS_n = %b, MOSI = %b", super.convert2string(), rst_n, SS_n,



=================================================================================
=== Instance: /wrapper_config_pkg
=== Design Unit: work.wrapper_config_pkg
=================================================================================
Branch Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Branches                        10         0        10     0.00%

================================Branch Details================================

Branch Coverage for instance /wrapper_config_pkg

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File wrapper_config.sv
------------------------------------IF Branch------------------------------------
    6                                    ***0***     Count coming in to IF
    6               1                    ***0***         `uvm_object_utils(wrapper_config)

                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    6                                    ***0***     Count coming in to IF
    6               2                    ***0***         `uvm_object_utils(wrapper_config)

                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    6                                    ***0***     Count coming in to IF
    6               3                    ***0***         `uvm_object_utils(wrapper_config)

    6               4                    ***0***         `uvm_object_utils(wrapper_config)

Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    6                                    ***0***     Count coming in to IF
    6               5                    ***0***         `uvm_object_utils(wrapper_config)

                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    6                                    ***0***     Count coming in to IF
    6               6                    ***0***         `uvm_object_utils(wrapper_config)

                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%


Condition Coverage:
    Enabled Coverage              Bins   Covered    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Conditions                       2         0         2     0.00%

================================Condition Details================================

Condition Coverage for instance /wrapper_config_pkg --

  File wrapper_config.sv
----------------Focused Condition View-------------------
Line       6 Item    1  (name != 0)
Condition totals: 0 of 1 input term covered = 0.00%

   Input Term   Covered  Reason for no coverage   Hint
  -----------  --------  -----------------------  --------------
  (name != 0)         N  No hits                  Hit '_0' and '_1'

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:    ***0***  (name != 0)_0         -                             
  Row   2:    ***0***  (name != 0)_1         -                             

----------------Focused Condition View-------------------
Line       6 Item    2  (tmp_data__ != null)
Condition totals: 0 of 1 input term covered = 0.00%

            Input Term   Covered  Reason for no coverage   Hint
           -----------  --------  -----------------------  --------------
  (tmp_data__ != null)         N  No hits                  Hit '_0' and '_1'

     Rows:       Hits  FEC Target              Non-masking condition(s)      
 ---------  ---------  --------------------    -------------------------     
  Row   1:    ***0***  (tmp_data__ != null)_0  -                             
  Row   2:    ***0***  (tmp_data__ != null)_1  -                             


Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                      11         1        10     9.09%

================================Statement Details================================

Statement Coverage for instance /wrapper_config_pkg --

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File wrapper_config.sv
    1                                                package wrapper_config_pkg;

    2                                                  import uvm_pkg::*;

    3                                                  `include "uvm_macros.svh"

    4                                                

    5                                                  class wrapper_config extends uvm_object;

    6               1                    ***0***         `uvm_object_utils(wrapper_config)

    6               2                    ***0***     
    6               3                    ***0***     
    6               4                    ***0***     
    6               5                    ***0***     
    6               6                    ***0***     
    6               7                    ***0***     
    6               8                    ***0***     
    6               9                    ***0***     
    6              10                    ***0***     
    7                                                

    8                                                    virtual wrapper_if wrapper_vif;

    9                                                    uvm_active_passive_enum is_active;

    10                                               

    11                                                   function new(string name = "wrapper_config");

    12              1                          1           super.new(name);



=================================================================================
=== Instance: /wrapper_driver_pkg
=== Design Unit: work.wrapper_driver_pkg
=================================================================================
Branch Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Branches                         2         1         1    50.00%

================================Branch Details================================

Branch Coverage for instance /wrapper_driver_pkg

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File wrapper_driver.sv
------------------------------------IF Branch------------------------------------
    29                                     10001     Count coming in to IF
    29              1                    ***0***             `uvm_info("run_phase", stim_seq_item.convert2string_stimulus(), UVM_HIGH);

                                           10001     All False Count
Branch totals: 1 hit of 2 branches = 50.00%


Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                      14        11         3    78.57%

================================Statement Details================================

Statement Coverage for instance /wrapper_driver_pkg --

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File wrapper_driver.sv
    1                                                package wrapper_driver_pkg;

    2                                                  import uvm_pkg::*;

    3                                                  import wrapper_config_pkg::*;

    4                                                  import wrapper_seq_item_pkg::*;

    5                                                  `include "uvm_macros.svh"

    6                                                

    7                                                  class wrapper_driver extends uvm_driver #(wrapper_seq_item);

    8               1                    ***0***         `uvm_component_utils(wrapper_driver);

    8               2                    ***0***     
    8               3                          2     
    9                                                

    10                                                   virtual wrapper_if wrapper_vif;

    11                                                   wrapper_seq_item   stim_seq_item;

    12                                               

    13                                                   function new(string name = "wrapper_driver", uvm_component parent = null);

    14              1                          1           super.new(name, parent);

    15                                                   endfunction  //new()

    16                                               

    17                                                   virtual task run_phase(uvm_phase phase);

    18              1                          1           super.run_phase(phase);

    19              1                          1           forever begin

    20              1                      10002             stim_seq_item = wrapper_seq_item::type_id::create("stim_seq_item");

    21                                               

    22              1                      10002             seq_item_port.get_next_item(stim_seq_item);

    23              1                      10001             wrapper_vif.rst_n = stim_seq_item.rst_n;

    24              1                      10001             wrapper_vif.SS_n  = stim_seq_item.SS_n;

    25              1                      10001             wrapper_vif.MOSI  = stim_seq_item.MOSI;

    26              1                      10001             @(negedge wrapper_vif.clk);

    27              1                      10001             seq_item_port.item_done();

    28                                               

    29              1                    ***0***             `uvm_info("run_phase", stim_seq_item.convert2string_stimulus(), UVM_HIGH);



=================================================================================
=== Instance: /wrapper_sequencer_pkg
=== Design Unit: work.wrapper_sequencer_pkg
=================================================================================
Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                       4         2         2    50.00%

================================Statement Details================================

Statement Coverage for instance /wrapper_sequencer_pkg --

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File wrapper_sqr.sv
    1                                                package wrapper_sequencer_pkg;

    2                                                  import uvm_pkg::*;

    3                                                  import wrapper_seq_item_pkg::*;

    4                                                  `include "uvm_macros.svh"

    5                                                

    6                                                  class wrapper_sequencer extends uvm_sequencer #(wrapper_seq_item);

    7               1                    ***0***         `uvm_component_utils(wrapper_sequencer)

    7               2                    ***0***     
    7               3                          2     
    8                                                

    9                                                    function new(string name = "wrapper_sequencer", uvm_component parent = null);

    10              1                          1           super.new(name, parent);



=================================================================================
=== Instance: /wrapper_monitor_pkg
=== Design Unit: work.wrapper_monitor_pkg
=================================================================================
Branch Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Branches                         2         1         1    50.00%

================================Branch Details================================

Branch Coverage for instance /wrapper_monitor_pkg

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File wrapper_monitor.sv
------------------------------------IF Branch------------------------------------
    35                                     10001     Count coming in to IF
    35              1                    ***0***             `uvm_info("run_phase", rsp_seq_item.convert2string(), UVM_HIGH)

                                           10001     All False Count
Branch totals: 1 hit of 2 branches = 50.00%


Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                      16        13         3    81.25%

================================Statement Details================================

Statement Coverage for instance /wrapper_monitor_pkg --

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File wrapper_monitor.sv
    1                                                package wrapper_monitor_pkg;

    2                                                  import wrapper_seq_item_pkg::*;

    3                                                  import uvm_pkg::*;

    4                                                  `include "uvm_macros.svh"

    5                                                

    6                                                  class wrapper_monitor extends uvm_monitor;

    7               1                    ***0***         `uvm_component_utils(wrapper_monitor)

    7               2                    ***0***     
    7               3                          2     
    8                                                

    9                                                    virtual wrapper_if wrapper_vif;

    10                                                   wrapper_seq_item rsp_seq_item;

    11                                                   uvm_analysis_port #(wrapper_seq_item) mon_ap;

    12                                               

    13                                                   function new(string name = "wrapper_monitor", uvm_component parent = null);

    14              1                          1           super.new(name, parent);

    15                                                   endfunction  //new()

    16                                               

    17                                                   virtual function void build_phase(uvm_phase phase);

    18              1                          1           super.build_phase(phase);

    19              1                          1           mon_ap = new("mon_ap", this);

    20                                                   endfunction

    21                                               

    22                                                   virtual task run_phase(uvm_phase phase);

    23              1                          1           super.run_phase(phase);

    24                                               

    25              1                          1           forever begin

    26              1                      10002             rsp_seq_item = wrapper_seq_item::type_id::create("rsp_seq_item");

    27                                               

    28              1                      10002             @(negedge wrapper_vif.clk);

    29              1                      10001             rsp_seq_item.rst_n = wrapper_vif.rst_n;

    30              1                      10001             rsp_seq_item.SS_n  = wrapper_vif.SS_n;

    31              1                      10001             rsp_seq_item.MOSI  = wrapper_vif.MOSI;

    32              1                      10001             rsp_seq_item.MISO  = wrapper_vif.MISO;

    33                                               

    34              1                      10001             mon_ap.write(rsp_seq_item);

    35              1                    ***0***             `uvm_info("run_phase", rsp_seq_item.convert2string(), UVM_HIGH)



=================================================================================
=== Instance: /wrapper_agent_pkg
=== Design Unit: work.wrapper_agent_pkg
=================================================================================
Branch Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Branches                         8         3         5    37.50%

================================Branch Details================================

Branch Coverage for instance /wrapper_agent_pkg

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File wrapper_agent.sv
------------------------------------IF Branch------------------------------------
    26                                         1     Count coming in to IF
    26              1                    ***0***           if (!uvm_config_db#(wrapper_config)::get(this, "", "wrapper_CFG", wrapper_cfg)) begin

                                               1     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    27                                   ***0***     Count coming in to IF
    27              1                    ***0***             `uvm_fatal(

                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    32                                         1     Count coming in to IF
    32              1                          1           if (wrapper_cfg.is_active == UVM_ACTIVE) begin

                                         ***0***     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    42                                         1     Count coming in to IF
    42              1                          1           if (wrapper_cfg.is_active == UVM_ACTIVE) begin

                                         ***0***     All False Count
Branch totals: 1 hit of 2 branches = 50.00%


Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                      14        11         3    78.57%

================================Statement Details================================

Statement Coverage for instance /wrapper_agent_pkg --

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File wrapper_agent.sv
    1                                                package wrapper_agent_pkg;

    2                                                  import uvm_pkg::*;

    3                                                  import wrapper_seq_item_pkg::*;

    4                                                  import wrapper_monitor_pkg::*;

    5                                                  import wrapper_config_pkg::*;

    6                                                  import wrapper_sequencer_pkg::*;

    7                                                  import wrapper_driver_pkg::*;

    8                                                  `include "uvm_macros.svh"

    9                                                

    10                                                 class wrapper_agent extends uvm_agent;

    11              1                    ***0***         `uvm_component_utils(wrapper_agent)

    11              2                    ***0***     
    11              3                          2     
    12                                               

    13                                                   wrapper_driver driver;

    14                                                   wrapper_sequencer sqr;

    15                                                   wrapper_monitor mon;

    16                                                   wrapper_config wrapper_cfg;

    17                                                   uvm_analysis_port #(wrapper_seq_item) agt_ap;

    18                                               

    19                                                   function new(string name = "wrapper_agent", uvm_component parent = null);

    20              1                          1           super.new(name, parent);

    21                                                   endfunction  //new()

    22                                               

    23                                                   virtual function void build_phase(uvm_phase phase);

    24              1                          1           super.build_phase(phase);

    25                                               

    26                                                     if (!uvm_config_db#(wrapper_config)::get(this, "", "wrapper_CFG", wrapper_cfg)) begin

    27              1                    ***0***             `uvm_fatal(

    28                                                           "build_phase",

    29                                                           "Agent - Unable to get the configuratoin object of the wrapper from uvm_config_db")

    30                                                     end

    31                                               

    32                                                     if (wrapper_cfg.is_active == UVM_ACTIVE) begin

    33              1                          1             driver = wrapper_driver::type_id::create("driver", this);

    34              1                          1             sqr = wrapper_sequencer::type_id::create("sqr", this);

    35                                                     end

    36                                               

    37              1                          1           mon = wrapper_monitor::type_id::create("mon", this);

    38              1                          1           agt_ap = new("agt_ap", this);

    39                                                   endfunction

    40                                               

    41                                                   virtual function void connect_phase(uvm_phase phase);

    42                                                     if (wrapper_cfg.is_active == UVM_ACTIVE) begin

    43              1                          1             driver.wrapper_vif = wrapper_cfg.wrapper_vif;

    44              1                          1             driver.seq_item_port.connect(sqr.seq_item_export);

    45                                                     end

    46              1                          1           mon.wrapper_vif = wrapper_cfg.wrapper_vif;

    47              1                          1           mon.mon_ap.connect(agt_ap);



=================================================================================
=== Instance: /wrapper_scoreboard_pkg
=== Design Unit: work.wrapper_scoreboard_pkg
=================================================================================
Branch Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Branches                        48        39         9    81.25%

================================Branch Details================================

Branch Coverage for instance /wrapper_scoreboard_pkg

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File wrapper_scoreboard.sv
------------------------------------IF Branch------------------------------------
    54                                     10001     Count coming in to IF
    54              1                    ***0***             if (MISO_ref !== seq_item.MISO) begin

    58              1                      10001             end else begin

Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    55                                   ***0***     Count coming in to IF
    55              1                    ***0***               `uvm_error("run_phase", $sformatf("Comparison failed: %s, MISO_ref = %b",

                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    59                                     10001     Count coming in to IF
    59              1                    ***0***               `uvm_info("run_phase", $sformatf("Comparison succeeded: %s", seq_item.convert2string()),

                                           10001     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    67                                     10001     Count coming in to IF
    67              1                        215           if (!seq_item_chk.rst_n) begin

    82              1                        220           end else if (SS_n_delayed) begin

    99              1                       8585           end else if (start_countdown == 0) begin

    146             1                         14           end else if (wr_count == 4'he && rd_count == 4'hf) begin

    153             1                        967           end else begin

Branch totals: 5 hits of 5 branches = 100.00%

------------------------------------IF Branch------------------------------------
    83                                       220     Count coming in to IF
    83              1                    ***0***             if (should_read && addr_received && rd_count == 4'hf) begin

                                             220     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    86                                       220     Count coming in to IF
    86              1                          3             if (should_read && !addr_received && wr_count == 4'hf) begin

                                             217     All False Count
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    102                                     8585     Count coming in to IF
    102             1                        119             if (should_read && addr_received && wr_count == 4'he && tx_valid && rd_count != 0) begin

    112             1                         14             end else if (last_read) begin

    122             1                       6457             end else if (wr_count != 4'he) begin

                                            1995     All False Count
Branch totals: 4 hits of 4 branches = 100.00%

------------------------------------IF Branch------------------------------------
    106                                      119     Count coming in to IF
    106             1                         14               if (rd_count == 0) begin

                                             105     All False Count
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    113                                       14     Count coming in to IF
    113             1                         14               if (tx_valid) begin

                                         ***0***     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    117                                       14     Count coming in to IF
    117             1                         14               if (rd_count == 4'hf) begin

                                         ***0***     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    126                                     6457     Count coming in to IF
    126             1                        489               if (wr_count == 4'hf) begin

                                            5968     All False Count
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    127                                      489     Count coming in to IF
    127             1                        382                 if (!should_read || !addr_received) begin

                                             107     All False Count
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    132                                     6457     Count coming in to IF
    132             1                        473               if (wr_count == 4'he) begin

                                            5984     All False Count
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    134                                      473     Count coming in to IF
    134             1                        369                 if (!should_read || !addr_received) begin

                                             104     All False Count
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    139                                      473     Count coming in to IF
    139             1                        130                 if (should_read && !addr_received) begin

                                             343     All False Count
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    156                                      967     Count coming in to IF
    156             1                        765             if (start_countdown == 0) begin

                                             202     All False Count
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    162                                    10001     Count coming in to IF
    162             1                       9786           if (seq_item_chk.rst_n) begin

                                             215     All False Count
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    163                                     9786     Count coming in to IF
    163             1                        382             if (rx_valid) begin

                                            9404     All False Count
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------CASE Branch------------------------------------
    164                                      382     Count coming in to CASE
    165             1                        103                 2'b01: begin

    169             1                         96                 2'b11: begin

    173             1                        183                 default: begin

Branch totals: 3 hits of 3 branches = 100.00%

------------------------------------IF Branch------------------------------------
    184                                        1     Count coming in to IF
    184             1                          1           `uvm_info("report phase", $sformatf("Total successful transactions: %0d", correct_count),

                                         ***0***     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    186                                        1     Count coming in to IF
    186             1                          1           `uvm_info("report phase", $sformatf("Total failed transactions: %0d", error_count),

                                         ***0***     All False Count
Branch totals: 1 hit of 2 branches = 50.00%


Condition Coverage:
    Enabled Coverage              Bins   Covered    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Conditions                      27        20         7    74.07%

================================Condition Details================================

Condition Coverage for instance /wrapper_scoreboard_pkg --

  File wrapper_scoreboard.sv
----------------Focused Condition View-------------------
Line       54 Item    1  (this.MISO_ref !== this.seq_item.MISO)
Condition totals: 0 of 1 input term covered = 0.00%

                              Input Term   Covered  Reason for no coverage   Hint
                             -----------  --------  -----------------------  --------------
  (this.MISO_ref !== this.seq_item.MISO)         N  '_1' not hit             Hit '_1'

     Rows:       Hits  FEC Target                                Non-masking condition(s)      
 ---------  ---------  --------------------                      -------------------------     
  Row   1:          1  (this.MISO_ref !== this.seq_item.MISO)_0  -                             
  Row   2:    ***0***  (this.MISO_ref !== this.seq_item.MISO)_1  -                             

----------------Focused Condition View-------------------
Line       83 Item    1  (this.should_read && this.addr_received && (this.rd_count == 15))
Condition totals: 0 of 3 input terms covered = 0.00%

             Input Term   Covered  Reason for no coverage   Hint
            -----------  --------  -----------------------  --------------
       this.should_read         N  '_1' not hit             Hit '_1'
     this.addr_received         N  '_1' not hit             Hit '_1'
  (this.rd_count == 15)         N  '_1' not hit             Hit '_1'

     Rows:       Hits  FEC Target               Non-masking condition(s)      
 ---------  ---------  --------------------     -------------------------     
  Row   1:          1  this.should_read_0       -                             
  Row   2:    ***0***  this.should_read_1       (this.addr_received && (this.rd_count == 15))
  Row   3:          1  this.addr_received_0     this.should_read              
  Row   4:    ***0***  this.addr_received_1     (this.should_read && (this.rd_count == 15))
  Row   5:          1  (this.rd_count == 15)_0  (this.should_read && this.addr_received)
  Row   6:    ***0***  (this.rd_count == 15)_1  (this.should_read && this.addr_received)

----------------Focused Condition View-------------------
Line       86 Item    1  (this.should_read && ~this.addr_received && (this.wr_count == 15))
Condition totals: 3 of 3 input terms covered = 100.00%

             Input Term   Covered  Reason for no coverage   Hint
            -----------  --------  -----------------------  --------------
       this.should_read         Y
     this.addr_received         Y
  (this.wr_count == 15)         Y

     Rows:       Hits  FEC Target               Non-masking condition(s)      
 ---------  ---------  --------------------     -------------------------     
  Row   1:          1  this.should_read_0       -                             
  Row   2:          1  this.should_read_1       (~this.addr_received && (this.wr_count == 15))
  Row   3:          1  this.addr_received_0     (this.should_read && (this.wr_count == 15))
  Row   4:          1  this.addr_received_1     this.should_read              
  Row   5:          1  (this.wr_count == 15)_0  (this.should_read && ~this.addr_received)
  Row   6:          1  (this.wr_count == 15)_1  (this.should_read && ~this.addr_received)

----------------Focused Condition View-------------------
Line       99 Item    1  (this.start_countdown == 0)
Condition totals: 1 of 1 input term covered = 100.00%

                   Input Term   Covered  Reason for no coverage   Hint
                  -----------  --------  -----------------------  --------------
  (this.start_countdown == 0)         Y

     Rows:       Hits  FEC Target                     Non-masking condition(s)      
 ---------  ---------  --------------------           -------------------------     
  Row   1:          1  (this.start_countdown == 0)_0  -                             
  Row   2:          1  (this.start_countdown == 0)_1  -                             

----------------Focused Condition View-------------------
Line       102 Item    1  (this.should_read && this.addr_received && (this.wr_count == 14) && this.tx_valid && (this.rd_count != 0))
Condition totals: 4 of 5 input terms covered = 80.00%

             Input Term   Covered  Reason for no coverage   Hint
            -----------  --------  -----------------------  --------------
       this.should_read         Y
     this.addr_received         Y
  (this.wr_count == 14)         Y
          this.tx_valid         Y
   (this.rd_count != 0)         N  '_0' not hit             Hit '_0'

     Rows:       Hits  FEC Target               Non-masking condition(s)      
 ---------  ---------  --------------------     -------------------------     
  Row   1:          1  this.should_read_0       -                             
  Row   2:          1  this.should_read_1       (this.addr_received && ((this.wr_count == 14) && (this.tx_valid && (this.rd_count != 0))))
  Row   3:          1  this.addr_received_0     this.should_read              
  Row   4:          1  this.addr_received_1     (this.should_read && ((this.wr_count == 14) && (this.tx_valid && (this.rd_count != 0))))
  Row   5:          1  (this.wr_count == 14)_0  (this.should_read && this.addr_received)
  Row   6:          1  (this.wr_count == 14)_1  (this.should_read && this.addr_received && (this.tx_valid && (this.rd_count != 0)))
  Row   7:          1  this.tx_valid_0          (this.should_read && this.addr_received && (this.wr_count == 14))
  Row   8:          1  this.tx_valid_1          (this.should_read && this.addr_received && (this.wr_count == 14) && (this.rd_count != 0))
  Row   9:    ***0***  (this.rd_count != 0)_0   (this.should_read && this.addr_received && (this.wr_count == 14) && this.tx_valid)
 Row   10:          1  (this.rd_count != 0)_1   (this.should_read && this.addr_received && (this.wr_count == 14) && this.tx_valid)

----------------Focused Condition View-------------------
Line       106 Item    1  (this.rd_count == 0)
Condition totals: 1 of 1 input term covered = 100.00%

            Input Term   Covered  Reason for no coverage   Hint
           -----------  --------  -----------------------  --------------
  (this.rd_count == 0)         Y

     Rows:       Hits  FEC Target              Non-masking condition(s)      
 ---------  ---------  --------------------    -------------------------     
  Row   1:          1  (this.rd_count == 0)_0  -                             
  Row   2:          1  (this.rd_count == 0)_1  -                             

----------------Focused Condition View-------------------
Line       117 Item    1  (this.rd_count == 15)
Condition totals: 0 of 1 input term covered = 0.00%

             Input Term   Covered  Reason for no coverage   Hint
            -----------  --------  -----------------------  --------------
  (this.rd_count == 15)         N  '_0' not hit             Hit '_0'

     Rows:       Hits  FEC Target               Non-masking condition(s)      
 ---------  ---------  --------------------     -------------------------     
  Row   1:    ***0***  (this.rd_count == 15)_0  -                             
  Row   2:          1  (this.rd_count == 15)_1  -                             

----------------Focused Condition View-------------------
Line       122 Item    1  (this.wr_count != 14)
Condition totals: 1 of 1 input term covered = 100.00%

             Input Term   Covered  Reason for no coverage   Hint
            -----------  --------  -----------------------  --------------
  (this.wr_count != 14)         Y

     Rows:       Hits  FEC Target               Non-masking condition(s)      
 ---------  ---------  --------------------     -------------------------     
  Row   1:          1  (this.wr_count != 14)_0  -                             
  Row   2:          1  (this.wr_count != 14)_1  -                             

----------------Focused Condition View-------------------
Line       126 Item    1  (this.wr_count == 15)
Condition totals: 1 of 1 input term covered = 100.00%

             Input Term   Covered  Reason for no coverage   Hint
            -----------  --------  -----------------------  --------------
  (this.wr_count == 15)         Y

     Rows:       Hits  FEC Target               Non-masking condition(s)      
 ---------  ---------  --------------------     -------------------------     
  Row   1:          1  (this.wr_count == 15)_0  -                             
  Row   2:          1  (this.wr_count == 15)_1  -                             

----------------Focused Condition View-------------------
Line       127 Item    1  (~this.should_read || ~this.addr_received)
Condition totals: 2 of 2 input terms covered = 100.00%

          Input Term   Covered  Reason for no coverage   Hint
         -----------  --------  -----------------------  --------------
    this.should_read         Y
  this.addr_received         Y

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:          1  this.should_read_0    -                             
  Row   2:          1  this.should_read_1    this.addr_received            
  Row   3:          1  this.addr_received_0  this.should_read              
  Row   4:          1  this.addr_received_1  this.should_read              

----------------Focused Condition View-------------------
Line       132 Item    1  (this.wr_count == 14)
Condition totals: 1 of 1 input term covered = 100.00%

             Input Term   Covered  Reason for no coverage   Hint
            -----------  --------  -----------------------  --------------
  (this.wr_count == 14)         Y

     Rows:       Hits  FEC Target               Non-masking condition(s)      
 ---------  ---------  --------------------     -------------------------     
  Row   1:          1  (this.wr_count == 14)_0  -                             
  Row   2:          1  (this.wr_count == 14)_1  -                             

----------------Focused Condition View-------------------
Line       134 Item    1  (~this.should_read || ~this.addr_received)
Condition totals: 2 of 2 input terms covered = 100.00%

          Input Term   Covered  Reason for no coverage   Hint
         -----------  --------  -----------------------  --------------
    this.should_read         Y
  this.addr_received         Y

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:          1  this.should_read_0    -                             
  Row   2:          1  this.should_read_1    this.addr_received            
  Row   3:          1  this.addr_received_0  this.should_read              
  Row   4:          1  this.addr_received_1  this.should_read              

----------------Focused Condition View-------------------
Line       139 Item    1  (this.should_read && ~this.addr_received)
Condition totals: 2 of 2 input terms covered = 100.00%

          Input Term   Covered  Reason for no coverage   Hint
         -----------  --------  -----------------------  --------------
    this.should_read         Y
  this.addr_received         Y

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:          1  this.should_read_0    -                             
  Row   2:          1  this.should_read_1    ~this.addr_received           
  Row   3:          1  this.addr_received_0  this.should_read              
  Row   4:          1  this.addr_received_1  this.should_read              

----------------Focused Condition View-------------------
Line       146 Item    1  ((this.wr_count == 14) && (this.rd_count == 15))
Condition totals: 1 of 2 input terms covered = 50.00%

             Input Term   Covered  Reason for no coverage   Hint
            -----------  --------  -----------------------  --------------
  (this.wr_count == 14)         Y
  (this.rd_count == 15)         N  '_0' not hit             Hit '_0'

     Rows:       Hits  FEC Target               Non-masking condition(s)      
 ---------  ---------  --------------------     -------------------------     
  Row   1:          1  (this.wr_count == 14)_0  -                             
  Row   2:          1  (this.wr_count == 14)_1  (this.rd_count == 15)         
  Row   3:    ***0***  (this.rd_count == 15)_0  (this.wr_count == 14)         
  Row   4:          1  (this.rd_count == 15)_1  (this.wr_count == 14)         

----------------Focused Condition View-------------------
Line       156 Item    1  (this.start_countdown == 0)
Condition totals: 1 of 1 input term covered = 100.00%

                   Input Term   Covered  Reason for no coverage   Hint
                  -----------  --------  -----------------------  --------------
  (this.start_countdown == 0)         Y

     Rows:       Hits  FEC Target                     Non-masking condition(s)      
 ---------  ---------  --------------------           -------------------------     
  Row   1:          1  (this.start_countdown == 0)_0  -                             
  Row   2:          1  (this.start_countdown == 0)_1  -                             


Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                      72        66         6    91.66%

================================Statement Details================================

Statement Coverage for instance /wrapper_scoreboard_pkg --

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File wrapper_scoreboard.sv
    1                                                package wrapper_scoreboard_pkg;

    2                                                  import uvm_pkg::*;

    3                                                  import wrapper_seq_item_pkg::*;

    4                                                  `include "uvm_macros.svh"

    5                                                

    6                                                  class wrapper_scoreboard extends uvm_scoreboard;

    7               1                    ***0***         `uvm_component_utils(wrapper_scoreboard)

    7               2                    ***0***     
    7               3                          2     
    8                                                

    9                                                    uvm_analysis_export #(wrapper_seq_item) sb_export;

    10                                                   uvm_tlm_analysis_fifo #(wrapper_seq_item) sb_fifo;

    11                                                   wrapper_seq_item seq_item;

    12                                               

    13                                                   logic MISO_ref;

    14                                               

    15                                                   logic [9:0] rx_data;

    16                                                   logic rx_valid;

    17                                                   logic [7:0] tx_data;

    18                                                   logic tx_valid;

    19                                                   logic [7:0] ram[logic [7:0]];

    20                                                   logic [7:0] addr;

    21                                               

    22                                                   bit [1:0] start_countdown;

    23                                                   bit should_read;

    24                                                   bit addr_received;

    25                                                   bit SS_n_delayed;

    26                                                   bit last_read;

    27                                                   bit [3:0] wr_count, rd_count;

    28                                               

    29                                               

    30                                                   int correct_count, error_count;

    31                                               

    32                                                   function new(string name = "wrapper_scoreboard", uvm_component parent = null);

    33              1                          1           super.new(name, parent);

    34                                                   endfunction  //new()

    35                                               

    36                                               

    37                                               

    38                                                   virtual function void build_phase(uvm_phase phase);

    39              1                          1           super.build_phase(phase);

    40              1                          1           sb_export = new("sb_export", this);

    41              1                          1           sb_fifo   = new("sb_fifo", this);

    42                                                   endfunction

    43                                               

    44                                                   virtual function void connect_phase(uvm_phase phase);

    45              1                          1           super.connect_phase(phase);

    46              1                          1           sb_export.connect(sb_fifo.analysis_export);

    47                                                   endfunction

    48                                               

    49                                                   virtual task run_phase(uvm_phase phase);

    50              1                          1           super.run_phase(phase);

    51              1                          1           forever begin

    52              1                      10002             sb_fifo.get(seq_item);

    53              1                      10001             ref_model(seq_item);

    54                                                       if (MISO_ref !== seq_item.MISO) begin

    55              1                    ***0***               `uvm_error("run_phase", $sformatf("Comparison failed: %s, MISO_ref = %b",

    56                                                                                           seq_item.convert2string(), MISO_ref))

    57              1                    ***0***               error_count++;

    58                                                       end else begin

    59              1                    ***0***               `uvm_info("run_phase", $sformatf("Comparison succeeded: %s", seq_item.convert2string()),

    60                                                                   UVM_HIGH)

    61              1                      10001               correct_count++;

    62                                                       end

    63                                                     end

    64                                                   endtask  //

    65                                               

    66                                                   virtual task ref_model(wrapper_seq_item seq_item_chk);

    67                                                     if (!seq_item_chk.rst_n) begin

    68              1                        215             addr = 0;

    69              1                        215             tx_data = 0;

    70              1                        215             tx_valid = 0;

    71                                                       // wait two cycles before sending data

    72              1                        215             start_countdown = 2;

    73                                                       // reset immediately in same cycle

    74              1                        215             wr_count = 9;

    75              1                        215             rd_count = 7;

    76              1                        215             rx_data = 0;

    77              1                        215             rx_valid = 0;

    78              1                        215             MISO_ref = 0;

    79              1                        215             should_read = 0;

    80              1                        215             addr_received = 0;

    81              1                        215             last_read = 0;

    82                                                     end else if (SS_n_delayed) begin

    83                                                       if (should_read && addr_received && rd_count == 4'hf) begin

    84              1                    ***0***               addr_received = 0;

    85                                                       end

    86                                                       if (should_read && !addr_received && wr_count == 4'hf) begin

    87              1                          3               addr_received = 1;

    88                                                       end

    89                                                       // wait just one cycle before sending data

    90              1                        220             start_countdown = 1;

    91                                                       // reset one cycle later

    92              1                        220             wr_count = 9;

    93              1                        220             rd_count = 7;

    94              1                        220             rx_data = 0;

    95              1                        220             rx_valid = 0;

    96              1                        220             MISO_ref = 0;

    97              1                        220             should_read = 0;

    98              1                        220             last_read = 0;

    99                                                     end else if (start_countdown == 0) begin

    100                                                      // handle read operation

    101                                                      // operation is read, dummy data written, and data to be read is ready, then read.

    102                                                      if (should_read && addr_received && wr_count == 4'he && tx_valid && rd_count != 0) begin

    103             1                        119               MISO_ref = tx_data[rd_count];

    104             1                        119               rd_count = rd_count - 1;

    105                                                        // sequence of data is finished in read operation

    106                                                        if (rd_count == 0) begin

    107             1                         14                 last_read = 1;

    108             1                         14                 addr_received = 0;

    109                                                        end

    110                                              

    111                                                        // handle last read operation

    112                                                      end else if (last_read) begin

    113                                                        if (tx_valid) begin

    114             1                         14                 MISO_ref = tx_data[rd_count];

    115                                                        end

    116             1                         14               rd_count = rd_count - 1;

    117                                                        if (rd_count == 4'hf) begin

    118             1                         14                 start_countdown = 1;

    119                                                        end

    120                                              

    121                                                        // handle write operation

    122                                                      end else if (wr_count != 4'he) begin

    123             1                       6457               rx_data[wr_count] = seq_item_chk.MOSI;

    124             1                       6457               wr_count = wr_count - 1;

    125                                              

    126                                                        if (wr_count == 4'hf) begin

    127                                                          if (!should_read || !addr_received) begin

    128             1                        382                   rx_valid = 1;

    129                                                          end

    130                                                        end

    131                                              

    132                                                        if (wr_count == 4'he) begin

    133             1                        473                 rx_valid = 0;

    134                                                          if (!should_read || !addr_received) begin

    135             1                        369                   wr_count = 9;

    136             1                        369                   rx_data = 0;

    137             1                        369                   start_countdown = 1;

    138                                                          end

    139                                                          if (should_read && !addr_received) begin

    140             1                        130                   addr_received = 1;

    141                                                          end

    142                                                        end

    143                                                      end

    144                                              

    145                                                      // automatic reset after complete read-write cycle

    146                                                    end else if (wr_count == 4'he && rd_count == 4'hf) begin

    147             1                         14             wr_count = 9;

    148             1                         14             rd_count = 7;

    149             1                         14             rx_data = 0;

    150             1                         14             MISO_ref = 0;

    151             1                         14             should_read = 0;

    152             1                         14             last_read = 0;

    153                                                    end else begin

    154                                                      // delay before writing data

    155             1                        967             start_countdown -= 1;

    156                                                      if (start_countdown == 0) begin

    157             1                        765               should_read = seq_item_chk.MOSI;

    158                                                      end

    159                                                    end

    160             1                      10001           SS_n_delayed = seq_item_chk.SS_n;

    161                                              

    162                                                    if (seq_item_chk.rst_n) begin

    163                                                      if (rx_valid) begin

    164                                                        case (rx_data[9:8])

    165                                                          2'b01: begin

    166             1                        103                   ram[addr] = rx_data[7:0];

    167             1                        103                   tx_valid  = 0;

    168                                                          end

    169                                                          2'b11: begin

    170             1                         96                   tx_data  = ram[addr];

    171             1                         96                   tx_valid = 1;

    172                                                          end

    173                                                          default: begin

    174             1                        183                   addr = rx_data[7:0];

    175             1                        183                   tx_valid = 0;

    176                                                          end

    177                                                        endcase

    178                                                      end

    179                                                    end

    180                                                  endtask  //

    181                                              

    182                                                  virtual function void report_phase(uvm_phase phase);

    183             1                          1           super.report_phase(phase);

    184             1                          1           `uvm_info("report phase", $sformatf("Total successful transactions: %0d", correct_count),

    185                                                              UVM_MEDIUM)

    186             1                          1           `uvm_info("report phase", $sformatf("Total failed transactions: %0d", error_count),



=================================================================================
=== Instance: /wrapper_coverage_pkg
=== Design Unit: work.wrapper_coverage_pkg
=================================================================================

Covergroup Coverage:
    Covergroups                      1        na        na   100.00%
        Coverpoints/Crosses          3        na        na        na
            Covergroup Bins         10        10         0   100.00%
----------------------------------------------------------------------------------------------------------
Covergroup                                             Metric       Goal       Bins    Status               
                                                                                                         
----------------------------------------------------------------------------------------------------------
 TYPE /wrapper_coverage_pkg/wrapper_coverage/cvr_gp 
                                                      100.00%        100          -    Covered              
    covered/total bins:                                    10         10          -                      
    missing/total bins:                                     0         10          -                      
    % Hit:                                            100.00%        100          -                      
    Coverpoint wrapper_select_cp                      100.00%        100          -    Covered              
        covered/total bins:                                 2          2          -                      
        missing/total bins:                                 0          2          -                      
        % Hit:                                        100.00%        100          -                      
    Coverpoint MISO_cp                                100.00%        100          -    Covered              
        covered/total bins:                                 4          4          -                      
        missing/total bins:                                 0          4          -                      
        % Hit:                                        100.00%        100          -                      
    Coverpoint MOSI_cp                                100.00%        100          -    Covered              
        covered/total bins:                                 4          4          -                      
        missing/total bins:                                 0          4          -                      
        % Hit:                                        100.00%        100          -                      
 Covergroup instance \/wrapper_coverage_pkg::wrapper_coverage::cvr_gp  
                                                      100.00%        100          -    Covered              
    covered/total bins:                                    10         10          -                      
    missing/total bins:                                     0         10          -                      
    % Hit:                                            100.00%        100          -                      
    Coverpoint wrapper_select_cp                      100.00%        100          -    Covered              
        covered/total bins:                                 2          2          -                      
        missing/total bins:                                 0          2          -                      
        % Hit:                                        100.00%        100          -                      
        bin selected                                     9772          1          -    Covered              
        bin not_selected                                  229          1          -    Covered              
    Coverpoint MISO_cp                                100.00%        100          -    Covered              
        covered/total bins:                                 4          4          -                      
        missing/total bins:                                 0          4          -                      
        % Hit:                                        100.00%        100          -                      
        bin high                                           38          1          -    Covered              
        bin low                                          9917          1          -    Covered              
        bin high_low                                       22          1          -    Covered              
        bin low_high                                       22          1          -    Covered              
    Coverpoint MOSI_cp                                100.00%        100          -    Covered              
        covered/total bins:                                 4          4          -                      
        missing/total bins:                                 0          4          -                      
        % Hit:                                        100.00%        100          -                      
        bin high                                         5076          1          -    Covered              
        bin low                                          4925          1          -    Covered              
        bin high_low                                     2476          1          -    Covered              
        bin low_high                                     2476          1          -    Covered              
Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                      14        12         2    85.71%

================================Statement Details================================

Statement Coverage for instance /wrapper_coverage_pkg --

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File wrapper_coverage.sv
    1                                                package wrapper_coverage_pkg;

    2                                                  import uvm_pkg::*;

    3                                                  import wrapper_seq_item_pkg::*;

    4                                                  `include "uvm_macros.svh"

    5                                                

    6                                                  class wrapper_coverage extends uvm_component;

    7               1                    ***0***         `uvm_component_utils(wrapper_coverage)

    7               2                    ***0***     
    7               3                          2     
    8                                                

    9                                                    wrapper_seq_item seq_item;

    10                                                   uvm_analysis_export #(wrapper_seq_item) cov_export;

    11                                                   uvm_tlm_analysis_fifo #(wrapper_seq_item) cov_fifo;

    12                                               

    13                                                   covergroup cvr_gp;

    14                                                     option.per_instance = 1;

    15                                                     wrapper_select_cp: coverpoint seq_item.SS_n {

    16                                                       // selected bin

    17                                                       bins selected = {1'b0};

    18                                                       // not selected bin

    19                                                       bins not_selected = {1'b1};

    20                                                     }

    21                                               

    22                                                     MISO_cp: coverpoint seq_item.MISO {

    23                                                       bins high = {1'b1};

    24                                                       bins low = {1'b0};

    25                                                       bins high_low = (1'b1 => 1'b0);

    26                                                       bins low_high = (1'b0 => 1'b1);

    27                                                     }

    28                                               

    29                                                     MOSI_cp: coverpoint seq_item.MOSI {

    30                                                       bins high = {1'b1};

    31                                                       bins low = {1'b0};

    32                                                       bins high_low = (1'b1 => 1'b0);

    33                                                       bins low_high = (1'b0 => 1'b1);

    34                                                     }

    35                                               

    36                                               

    37                                                   endgroup

    38                                               

    39                                                   function new(string name = "wrapper_coverage", uvm_component parent = null);

    40              1                          1           super.new(name, parent);

    41              1                          1           cvr_gp = new();

    42                                                   endfunction  //new()

    43                                               

    44                                                   virtual function void build_phase(uvm_phase phase);

    45              1                          1           super.build_phase(phase);

    46              1                          1           cov_export = new("cov_export", this);

    47              1                          1           cov_fifo   = new("cov_fifo", this);

    48                                                   endfunction

    49                                               

    50                                                   virtual function void connect_phase(uvm_phase phase);

    51              1                          1           super.connect_phase(phase);

    52              1                          1           cov_export.connect(cov_fifo.analysis_export);

    53                                                   endfunction

    54                                               

    55                                               

    56                                                   virtual task run_phase(uvm_phase phase);

    57              1                          1           super.run_phase(phase);

    58              1                          1           forever begin

    59              1                      10002             cov_fifo.get(seq_item);

    60              1                      10001             cvr_gp.sample();



=================================================================================
=== Instance: /wrapper_env_pkg
=== Design Unit: work.wrapper_env_pkg
=================================================================================
Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                      10         8         2    80.00%

================================Statement Details================================

Statement Coverage for instance /wrapper_env_pkg --

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File wrapper_env.sv
    1                                                package wrapper_env_pkg;

    2                                                  import wrapper_coverage_pkg::*;

    3                                                  import wrapper_scoreboard_pkg::*;

    4                                                  import wrapper_agent_pkg::*;

    5                                                  import uvm_pkg::*;

    6                                                  `include "uvm_macros.svh"

    7                                                

    8                                                  class wrapper_env extends uvm_env;

    9               1                    ***0***         `uvm_component_utils(wrapper_env)

    9               2                    ***0***     
    9               3                          2     
    10                                               

    11                                                   wrapper_agent agt;

    12                                                   wrapper_coverage cov;

    13                                                   wrapper_scoreboard sb;

    14                                               

    15                                                   function new(string name = "wrapper_env", uvm_component parent = null);

    16              1                          1           super.new(name, parent);

    17                                                   endfunction  //new()

    18                                               

    19                                                   virtual function void build_phase(uvm_phase phase);

    20              1                          1           super.build_phase(phase);

    21              1                          1           agt = wrapper_agent::type_id::create("agt", this);

    22              1                          1           cov = wrapper_coverage::type_id::create("cov", this);

    23              1                          1           sb  = wrapper_scoreboard::type_id::create("sb", this);

    24                                                   endfunction

    25                                               

    26                                                   virtual function void connect_phase(uvm_phase phase);

    27              1                          1           agt.agt_ap.connect(sb.sb_export);

    28              1                          1           agt.agt_ap.connect(cov.cov_export);



=================================================================================
=== Instance: /wrapper_seq_pkg
=== Design Unit: work.wrapper_seq_pkg
=================================================================================

Assertion Coverage:
    Assertions                       2         2         0   100.00%
--------------------------------------------------------------------
Name                 File(Line)                   Failure      Pass 
                                                  Count        Count
--------------------------------------------------------------------
/wrapper_seq_pkg/wrapper_reset_seq/body/rst_rand
                     wrapper_seq.sv(18)                 0          1
/wrapper_seq_pkg/wrapper_main_seq/body/main_seq
                     wrapper_seq.sv(36)                 0          1
Branch Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Branches                        20         0        20     0.00%

================================Branch Details================================

Branch Coverage for instance /wrapper_seq_pkg

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File wrapper_seq.sv
------------------------------------IF Branch------------------------------------
    7                                    ***0***     Count coming in to IF
    7               1                    ***0***         `uvm_object_utils(wrapper_reset_seq)

                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    7                                    ***0***     Count coming in to IF
    7               2                    ***0***         `uvm_object_utils(wrapper_reset_seq)

                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    7                                    ***0***     Count coming in to IF
    7               3                    ***0***         `uvm_object_utils(wrapper_reset_seq)

    7               4                    ***0***         `uvm_object_utils(wrapper_reset_seq)

Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    7                                    ***0***     Count coming in to IF
    7               5                    ***0***         `uvm_object_utils(wrapper_reset_seq)

                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    7                                    ***0***     Count coming in to IF
    7               6                    ***0***         `uvm_object_utils(wrapper_reset_seq)

                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    24                                   ***0***     Count coming in to IF
    24              1                    ***0***         `uvm_object_utils(wrapper_main_seq)

                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    24                                   ***0***     Count coming in to IF
    24              2                    ***0***         `uvm_object_utils(wrapper_main_seq)

                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    24                                   ***0***     Count coming in to IF
    24              3                    ***0***         `uvm_object_utils(wrapper_main_seq)

    24              4                    ***0***         `uvm_object_utils(wrapper_main_seq)

Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    24                                   ***0***     Count coming in to IF
    24              5                    ***0***         `uvm_object_utils(wrapper_main_seq)

                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    24                                   ***0***     Count coming in to IF
    24              6                    ***0***         `uvm_object_utils(wrapper_main_seq)

                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%


Condition Coverage:
    Enabled Coverage              Bins   Covered    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Conditions                       4         0         4     0.00%

================================Condition Details================================

Condition Coverage for instance /wrapper_seq_pkg --

  File wrapper_seq.sv
----------------Focused Condition View-------------------
Line       7 Item    1  (name != 0)
Condition totals: 0 of 1 input term covered = 0.00%

   Input Term   Covered  Reason for no coverage   Hint
  -----------  --------  -----------------------  --------------
  (name != 0)         N  No hits                  Hit '_0' and '_1'

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:    ***0***  (name != 0)_0         -                             
  Row   2:    ***0***  (name != 0)_1         -                             

----------------Focused Condition View-------------------
Line       7 Item    2  (tmp_data__ != null)
Condition totals: 0 of 1 input term covered = 0.00%

            Input Term   Covered  Reason for no coverage   Hint
           -----------  --------  -----------------------  --------------
  (tmp_data__ != null)         N  No hits                  Hit '_0' and '_1'

     Rows:       Hits  FEC Target              Non-masking condition(s)      
 ---------  ---------  --------------------    -------------------------     
  Row   1:    ***0***  (tmp_data__ != null)_0  -                             
  Row   2:    ***0***  (tmp_data__ != null)_1  -                             

----------------Focused Condition View-------------------
Line       24 Item    1  (name != 0)
Condition totals: 0 of 1 input term covered = 0.00%

   Input Term   Covered  Reason for no coverage   Hint
  -----------  --------  -----------------------  --------------
  (name != 0)         N  No hits                  Hit '_0' and '_1'

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:    ***0***  (name != 0)_0         -                             
  Row   2:    ***0***  (name != 0)_1         -                             

----------------Focused Condition View-------------------
Line       24 Item    2  (tmp_data__ != null)
Condition totals: 0 of 1 input term covered = 0.00%

            Input Term   Covered  Reason for no coverage   Hint
           -----------  --------  -----------------------  --------------
  (tmp_data__ != null)         N  No hits                  Hit '_0' and '_1'

     Rows:       Hits  FEC Target              Non-masking condition(s)      
 ---------  ---------  --------------------    -------------------------     
  Row   1:    ***0***  (tmp_data__ != null)_0  -                             
  Row   2:    ***0***  (tmp_data__ != null)_1  -                             


Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                      29        11        18    37.93%

================================Statement Details================================

Statement Coverage for instance /wrapper_seq_pkg --

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File wrapper_seq.sv
    1                                                package wrapper_seq_pkg;

    2                                                  import uvm_pkg::*;

    3                                                  import wrapper_seq_item_pkg::*;

    4                                                  `include "uvm_macros.svh"

    5                                                

    6                                                  class wrapper_reset_seq extends uvm_sequence #(wrapper_seq_item);

    7               1                    ***0***         `uvm_object_utils(wrapper_reset_seq)

    7               2                    ***0***     
    7               3                    ***0***     
    7               4                    ***0***     
    7               5                    ***0***     
    7               6                          1     
    7               7                    ***0***     
    7               8                    ***0***     
    7               9                    ***0***     
    7              10                    ***0***     
    8                                                

    9                                                    wrapper_seq_item seq_item;

    10                                               

    11                                                   function new(string name = "wrapper_reset_seq");

    12              1                          1           super.new(name);

    13                                                   endfunction  //new()

    14                                               

    15                                                   virtual task body();

    16              1                          1           seq_item = wrapper_seq_item::type_id::create("seq_item");

    17              1                          1           start_item(seq_item);

    18                                                     rst_rand : assert (seq_item.randomize() with {rst_n == 0;});

    19              1                          1           finish_item(seq_item);

    20                                                   endtask

    21                                                 endclass  //wrapper_reset_seq extends uvm_sequence #(wrapper_seq_item)

    22                                               

    23                                                 class wrapper_main_seq extends uvm_sequence #(wrapper_seq_item);

    24              1                    ***0***         `uvm_object_utils(wrapper_main_seq)

    24              2                    ***0***     
    24              3                    ***0***     
    24              4                    ***0***     
    24              5                    ***0***     
    24              6                          1     
    24              7                    ***0***     
    24              8                    ***0***     
    24              9                    ***0***     
    24             10                    ***0***     
    25                                               

    26                                                   wrapper_seq_item seq_item;

    27                                               

    28                                                   function new(string name = "wrapper_main_seq");

    29              1                          1           super.new(name);

    30                                                   endfunction  //new()

    31                                               

    32                                                   virtual task body();

    33              1                      10000           repeat (10000) begin

    34              1                      10000             seq_item = wrapper_seq_item::type_id::create("seq_item");

    35              1                      10000             start_item(seq_item);

    36                                                       main_seq : assert (seq_item.randomize());

    37              1                      10000             finish_item(seq_item);



=================================================================================
=== Instance: /wrapper_test_pkg
=== Design Unit: work.wrapper_test_pkg
=================================================================================
Branch Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Branches                        20         7        13    35.00%

================================Branch Details================================

Branch Coverage for instance /wrapper_test_pkg

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File wrapper_test.sv
------------------------------------IF Branch------------------------------------
    45                                         1     Count coming in to IF
    45              1                    ***0***           if (!uvm_config_db#(virtual wrapper_if)::get(

                                               1     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    48                                   ***0***     Count coming in to IF
    48              1                    ***0***             `uvm_fatal("build_phase",

                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    51                                         1     Count coming in to IF
    51              1                    ***0***           if (!uvm_config_db#(virtual ram_if)::get(this, "", "RAM_IF", ram_cfg.ram_vif)) begin

                                               1     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    52                                   ***0***     Count coming in to IF
    52              1                    ***0***             `uvm_fatal("build_phase",

                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    55                                         1     Count coming in to IF
    55              1                    ***0***           if (!uvm_config_db#(virtual slave_if)::get(this, "", "slave_IF", slave_cfg.slave_vif)) begin

                                               1     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    56                                   ***0***     Count coming in to IF
    56              1                    ***0***             `uvm_fatal("build_phase",

                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    73                                         1     Count coming in to IF
    73              1                          1           `uvm_info("run_phase", "Reset Asserted", UVM_LOW)

                                         ***0***     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    75                                         1     Count coming in to IF
    75              1                          1           `uvm_info("run_phase", "Reset Deasserted", UVM_LOW)

                                         ***0***     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    77                                         1     Count coming in to IF
    77              1                          1           `uvm_info("run_phase", "Stimulus Generation Started", UVM_LOW)

                                         ***0***     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    79                                         1     Count coming in to IF
    79              1                          1           `uvm_info("run_phase", " Stimulus Generation Ended", UVM_LOW)

                                         ***0***     All False Count
Branch totals: 1 hit of 2 branches = 50.00%


Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                      33        28         5    84.84%

================================Statement Details================================

Statement Coverage for instance /wrapper_test_pkg --

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File wrapper_test.sv
    1                                                package wrapper_test_pkg;

    2                                                  import uvm_pkg::*;

    3                                                  import wrapper_seq_pkg::*;

    4                                                  import wrapper_env_pkg::*;

    5                                                  import ram_env_pkg::*;

    6                                                  import slave_env_pkg::*;

    7                                                  import wrapper_config_pkg::*;

    8                                                  import ram_config_pkg::*;

    9                                                  import slave_config_pkg::*;

    10                                                 `include "uvm_macros.svh"

    11                                               

    12                                                 class wrapper_test extends uvm_test;

    13              1                    ***0***         `uvm_component_utils(wrapper_test)

    13              2                    ***0***     
    13              3                          4     
    14                                               

    15                                                   wrapper_env w_env;

    16                                                   ram_env r_env;

    17                                                   slave_env s_env;

    18                                                   wrapper_config wrapper_cfg;

    19                                                   ram_config ram_cfg;

    20                                                   slave_config slave_cfg;

    21                                                   wrapper_reset_seq reset_seq;

    22                                                   wrapper_main_seq main_seq;

    23                                               

    24                                                   function new(string name = "wrapper_test", uvm_component parent = null);

    25              1                          1           super.new(name, parent);

    26                                                   endfunction  //new()

    27                                               

    28                                                   virtual function void build_phase(uvm_phase phase);

    29              1                          1           super.build_phase(phase);

    30                                                     // Disable transaction recording

    31              1                          1           uvm_config_db#(int)::set(null, "", "recording_detail", 0);

    32              1                          1           uvm_config_db#(uvm_bitstream_t)::set(null, "", "recording_detail", 0);

    33                                               

    34              1                          1           w_env = wrapper_env::type_id::create("w_env", this);

    35              1                          1           r_env = ram_env::type_id::create("r_env", this);

    36              1                          1           s_env = slave_env::type_id::create("s_env", this);

    37                                               

    38              1                          1           wrapper_cfg = wrapper_config::type_id::create("wrapper_cfg");

    39              1                          1           ram_cfg = ram_config::type_id::create("ram_cfg");

    40              1                          1           slave_cfg = slave_config::type_id::create("slave_cfg");

    41                                               

    42              1                          1           reset_seq = wrapper_reset_seq::type_id::create("reset_seq", this);

    43              1                          1           main_seq = wrapper_main_seq::type_id::create("main_seq", this);

    44                                               

    45                                                     if (!uvm_config_db#(virtual wrapper_if)::get(

    46                                                             this, "", "wrapper_IF", wrapper_cfg.wrapper_vif

    47                                                         )) begin

    48              1                    ***0***             `uvm_fatal("build_phase",

    49                                                                  "Test - Unable to get virtual interface of the wrapper from uvm_config_db")

    50                                                     end

    51                                                     if (!uvm_config_db#(virtual ram_if)::get(this, "", "RAM_IF", ram_cfg.ram_vif)) begin

    52              1                    ***0***             `uvm_fatal("build_phase",

    53                                                                  "Test - Unable to get virtual interface of the ram from uvm_config_db")

    54                                                     end

    55                                                     if (!uvm_config_db#(virtual slave_if)::get(this, "", "slave_IF", slave_cfg.slave_vif)) begin

    56              1                    ***0***             `uvm_fatal("build_phase",

    57                                                                  "Test - Unable to get virtual interface of the slave from uvm_config_db")

    58                                                     end

    59                                               

    60              1                          1           wrapper_cfg.is_active = UVM_ACTIVE;

    61              1                          1           ram_cfg.is_active = UVM_PASSIVE;

    62              1                          1           slave_cfg.is_active = UVM_PASSIVE;

    63                                               

    64              1                          1           uvm_config_db#(wrapper_config)::set(this, "*", "wrapper_CFG", wrapper_cfg);

    65              1                          1           uvm_config_db#(ram_config)::set(this, "*", "ram_CFG", ram_cfg);

    66              1                          1           uvm_config_db#(slave_config)::set(this, "*", "slave_CFG", slave_cfg);

    67                                                   endfunction

    68                                               

    69                                                   virtual task run_phase(uvm_phase phase);

    70              1                          1           super.run_phase(phase);

    71              1                          1           phase.raise_objection(this);

    72                                               

    73              1                          1           `uvm_info("run_phase", "Reset Asserted", UVM_LOW)

    74              1                          1           reset_seq.start(w_env.agt.sqr);

    75              1                          1           `uvm_info("run_phase", "Reset Deasserted", UVM_LOW)

    76                                               

    77              1                          1           `uvm_info("run_phase", "Stimulus Generation Started", UVM_LOW)

    78              1                          1           main_seq.start(w_env.agt.sqr);

    79              1                          1           `uvm_info("run_phase", " Stimulus Generation Ended", UVM_LOW)

    80                                               

    81              1                          1           phase.drop_objection(this);



COVERGROUP COVERAGE:
----------------------------------------------------------------------------------------------------------
Covergroup                                             Metric       Goal       Bins    Status               
                                                                                                         
----------------------------------------------------------------------------------------------------------
 TYPE /slave_coverage_pkg/slave_coverage/cvr_gp       100.00%        100          -    Covered              
    covered/total bins:                                    27         27          -                      
    missing/total bins:                                     0         27          -                      
    % Hit:                                            100.00%        100          -                      
    Coverpoint slave_select_cp                        100.00%        100          -    Covered              
        covered/total bins:                                 2          2          -                      
        missing/total bins:                                 0          2          -                      
        % Hit:                                        100.00%        100          -                      
    Coverpoint MISO_cp                                100.00%        100          -    Covered              
        covered/total bins:                                 2          2          -                      
        missing/total bins:                                 0          2          -                      
        % Hit:                                        100.00%        100          -                      
    Coverpoint rx_opcode_cp                           100.00%        100          -    Covered              
        covered/total bins:                                 6          6          -                      
        missing/total bins:                                 0          6          -                      
        % Hit:                                        100.00%        100          -                      
    Coverpoint rx_valid_cp                            100.00%        100          -    Covered              
        covered/total bins:                                 2          2          -                      
        missing/total bins:                                 0          2          -                      
        % Hit:                                        100.00%        100          -                      
    Coverpoint tx_valid_cp                            100.00%        100          -    Covered              
        covered/total bins:                                 2          2          -                      
        missing/total bins:                                 0          2          -                      
        % Hit:                                        100.00%        100          -                      
    Coverpoint tx_data_cp                             100.00%        100          -    Covered              
        covered/total bins:                                 1          1          -                      
        missing/total bins:                                 0          1          -                      
        % Hit:                                        100.00%        100          -                      
    Cross rx_opcode_valid                             100.00%        100          -    Covered              
        covered/total bins:                                10         10          -                      
        missing/total bins:                                 0         10          -                      
        % Hit:                                        100.00%        100          -                      
    Cross tx_data_valid                               100.00%        100          -    Covered              
        covered/total bins:                                 2          2          -                      
        missing/total bins:                                 0          2          -                      
        % Hit:                                        100.00%        100          -                      
 Covergroup instance \/slave_coverage_pkg::slave_coverage::cvr_gp  
                                                      100.00%        100          -    Covered              
    covered/total bins:                                    27         27          -                      
    missing/total bins:                                     0         27          -                      
    % Hit:                                            100.00%        100          -                      
    Coverpoint slave_select_cp                        100.00%        100          -    Covered              
        covered/total bins:                                 2          2          -                      
        missing/total bins:                                 0          2          -                      
        % Hit:                                        100.00%        100          -                      
        bin selected                                     9772          1          -    Covered              
        bin not_selected                                  229          1          -    Covered              
    Coverpoint MISO_cp                                100.00%        100          -    Covered              
        covered/total bins:                                 2          2          -                      
        missing/total bins:                                 0          2          -                      
        % Hit:                                        100.00%        100          -                      
        bin high                                           38          1          -    Covered              
        bin low                                          9917          1          -    Covered              
    Coverpoint rx_opcode_cp                           100.00%        100          -    Covered              
        covered/total bins:                                 6          6          -                      
        missing/total bins:                                 0          6          -                      
        % Hit:                                        100.00%        100          -                      
        bin wr_addr                                      4076          1          -    Covered              
        bin wr_op                                        1868          1          -    Covered              
        bin rd_addr                                      2386          1          -    Covered              
        bin rd_op                                        1671          1          -    Covered              
        bin comp_rd_op                                    170          1          -    Covered              
        bin comp_wr_op                                    181          1          -    Covered              
    Coverpoint rx_valid_cp                            100.00%        100          -    Covered              
        covered/total bins:                                 2          2          -                      
        missing/total bins:                                 0          2          -                      
        % Hit:                                        100.00%        100          -                      
        bin valid                                         382          1          -    Covered              
        bin invalid                                      9619          1          -    Covered              
    Coverpoint tx_valid_cp                            100.00%        100          -    Covered              
        covered/total bins:                                 2          2          -                      
        missing/total bins:                                 0          2          -                      
        % Hit:                                        100.00%        100          -                      
        bin valid                                        1520          1          -    Covered              
        bin invalid                                      8481          1          -    Covered              
    Coverpoint tx_data_cp                             100.00%        100          -    Covered              
        covered/total bins:                                 1          1          -                      
        missing/total bins:                                 0          1          -                      
        % Hit:                                        100.00%        100          -                      
        bin any_data                                     9150          1          -    Covered              
    Cross rx_opcode_valid                             100.00%        100          -    Covered              
        covered/total bins:                                10         10          -                      
        missing/total bins:                                 0         10          -                      
        % Hit:                                        100.00%        100          -                      
        Auto, Default and User Defined Bins:
            bin <comp_wr_op,invalid>                      181          1          -    Covered              
            bin <comp_rd_op,invalid>                      170          1          -    Covered              
            bin <rd_op,invalid>                          1575          1          -    Covered              
            bin <wr_op,invalid>                          1765          1          -    Covered              
            bin <rd_addr,invalid>                        2294          1          -    Covered              
            bin <wr_addr,invalid>                        3985          1          -    Covered              
            bin <rd_op,valid>                              96          1          -    Covered              
            bin <wr_op,valid>                             103          1          -    Covered              
            bin <rd_addr,valid>                            92          1          -    Covered              
            bin <wr_addr,valid>                            91          1          -    Covered              
        Illegal and Ignore Bins:
            ignore_bin complete_valid_write                 0                     -    ZERO                 
            ignore_bin complete_valid_read                  0                     -    ZERO                 
    Cross tx_data_valid                               100.00%        100          -    Covered              
        covered/total bins:                                 2          2          -                      
        missing/total bins:                                 0          2          -                      
        % Hit:                                        100.00%        100          -                      
        Auto, Default and User Defined Bins:
            bin <any_data,invalid>                       8066          1          -    Covered              
            bin <any_data,valid>                         1084          1          -    Covered              
 TYPE /ram_coverage_pkg/ram_coverage/cvr_gp           100.00%        100          -    Covered              
    covered/total bins:                                    14         14          -                      
    missing/total bins:                                     0         14          -                      
    % Hit:                                            100.00%        100          -                      
    Coverpoint opcode                                 100.00%        100          -    Covered              
        covered/total bins:                                 4          4          -                      
        missing/total bins:                                 0          4          -                      
        % Hit:                                        100.00%        100          -                      
        bin wr_addr                                      4076          1          -    Covered              
        bin wr_op                                        1868          1          -    Covered              
        bin rd_addr                                      2386          1          -    Covered              
        bin rd_op                                        1671          1          -    Covered              
    Coverpoint rx_valid                               100.00%        100          -    Covered              
        covered/total bins:                                 2          2          -                      
        missing/total bins:                                 0          2          -                      
        % Hit:                                        100.00%        100          -                      
        bin valid                                         382          1          -    Covered              
        bin not_valid                                    9619          1          -    Covered              
    Cross opcode_valid                                100.00%        100          -    Covered              
        covered/total bins:                                 8          8          -                      
        missing/total bins:                                 0          8          -                      
        % Hit:                                        100.00%        100          -                      
        Auto, Default and User Defined Bins:
            bin <rd_op,not_valid>                        1575          1          -    Covered              
            bin <rd_addr,not_valid>                      2294          1          -    Covered              
            bin <wr_op,not_valid>                        1765          1          -    Covered              
            bin <wr_addr,not_valid>                      3985          1          -    Covered              
            bin <rd_op,valid>                              96          1          -    Covered              
            bin <rd_addr,valid>                            92          1          -    Covered              
            bin <wr_op,valid>                             103          1          -    Covered              
            bin <wr_addr,valid>                            91          1          -    Covered              
 Covergroup instance \/ram_coverage_pkg::ram_coverage::cvr_gp  
                                                      100.00%        100          -    Covered              
    covered/total bins:                                    14         14          -                      
    missing/total bins:                                     0         14          -                      
    % Hit:                                            100.00%        100          -                      
    Coverpoint opcode [1]                             100.00%        100          -    Covered              
        covered/total bins:                                 4          4          -                      
        missing/total bins:                                 0          4          -                      
        % Hit:                                        100.00%        100          -                      
        bin wr_addr                                      4076          1          -    Covered              
        bin wr_op                                        1868          1          -    Covered              
        bin rd_addr                                      2386          1          -    Covered              
        bin rd_op                                        1671          1          -    Covered              
    Coverpoint rx_valid [1]                           100.00%        100          -    Covered              
        covered/total bins:                                 2          2          -                      
        missing/total bins:                                 0          2          -                      
        % Hit:                                        100.00%        100          -                      
        bin valid                                         382          1          -    Covered              
        bin not_valid                                    9619          1          -    Covered              
    Cross opcode_valid                                100.00%        100          -    Covered              
        covered/total bins:                                 8          8          -                      
        missing/total bins:                                 0          8          -                      
        % Hit:                                        100.00%        100          -                      
        Auto, Default and User Defined Bins:
            bin <rd_op,not_valid>                        1575          1          -    Covered              
            bin <rd_addr,not_valid>                      2294          1          -    Covered              
            bin <wr_op,not_valid>                        1765          1          -    Covered              
            bin <wr_addr,not_valid>                      3985          1          -    Covered              
            bin <rd_op,valid>                              96          1          -    Covered              
            bin <rd_addr,valid>                            92          1          -    Covered              
            bin <wr_op,valid>                             103          1          -    Covered              
            bin <wr_addr,valid>                            91          1          -    Covered              
 TYPE /wrapper_coverage_pkg/wrapper_coverage/cvr_gp 
                                                      100.00%        100          -    Covered              
    covered/total bins:                                    10         10          -                      
    missing/total bins:                                     0         10          -                      
    % Hit:                                            100.00%        100          -                      
    Coverpoint wrapper_select_cp                      100.00%        100          -    Covered              
        covered/total bins:                                 2          2          -                      
        missing/total bins:                                 0          2          -                      
        % Hit:                                        100.00%        100          -                      
    Coverpoint MISO_cp                                100.00%        100          -    Covered              
        covered/total bins:                                 4          4          -                      
        missing/total bins:                                 0          4          -                      
        % Hit:                                        100.00%        100          -                      
    Coverpoint MOSI_cp                                100.00%        100          -    Covered              
        covered/total bins:                                 4          4          -                      
        missing/total bins:                                 0          4          -                      
        % Hit:                                        100.00%        100          -                      
 Covergroup instance \/wrapper_coverage_pkg::wrapper_coverage::cvr_gp  
                                                      100.00%        100          -    Covered              
    covered/total bins:                                    10         10          -                      
    missing/total bins:                                     0         10          -                      
    % Hit:                                            100.00%        100          -                      
    Coverpoint wrapper_select_cp                      100.00%        100          -    Covered              
        covered/total bins:                                 2          2          -                      
        missing/total bins:                                 0          2          -                      
        % Hit:                                        100.00%        100          -                      
        bin selected                                     9772          1          -    Covered              
        bin not_selected                                  229          1          -    Covered              
    Coverpoint MISO_cp                                100.00%        100          -    Covered              
        covered/total bins:                                 4          4          -                      
        missing/total bins:                                 0          4          -                      
        % Hit:                                        100.00%        100          -                      
        bin high                                           38          1          -    Covered              
        bin low                                          9917          1          -    Covered              
        bin high_low                                       22          1          -    Covered              
        bin low_high                                       22          1          -    Covered              
    Coverpoint MOSI_cp                                100.00%        100          -    Covered              
        covered/total bins:                                 4          4          -                      
        missing/total bins:                                 0          4          -                      
        % Hit:                                        100.00%        100          -                      
        bin high                                         5076          1          -    Covered              
        bin low                                          4925          1          -    Covered              
        bin high_low                                     2476          1          -    Covered              
        bin low_high                                     2476          1          -    Covered              

 [1] - Does not contribute coverage as weight is 0

TOTAL COVERGROUP COVERAGE: 100.00%  COVERGROUP TYPES: 3

DIRECTIVE COVERAGE:
--------------------------------------------------------------------------------------------
Name                                     Design Design   Lang File(Line)      Hits Status    
                                         Unit   UnitType                                     
--------------------------------------------------------------------------------------------
/top/DUT/slave/slave_sva_inst/slave_not_selected_coverage 
                                         slave_sva Verilog  SVA  slave_sva.sv(70) 208 Covered   
/top/DUT/slave/slave_sva_inst/read_operation_coverage 
                                         slave_sva Verilog  SVA  slave_sva.sv(75)   6 Covered   
/top/DUT/slave/slave_sva_inst/write_addr_coverage 
                                         slave_sva Verilog  SVA  slave_sva.sv(80)  18 Covered   
/top/DUT/slave/slave_sva_inst/read_addr_coverage 
                                         slave_sva Verilog  SVA  slave_sva.sv(85)   4 Covered   
/top/DUT/slave/slave_sva_inst/write_data_coverage 
                                         slave_sva Verilog  SVA  slave_sva.sv(90)  19 Covered   
/top/DUT/ram/address_updated_coverage    RAM    Verilog  SVA  ram.sv(68)       176 Covered   
/top/DUT/ram/address_unchanged_coverage  RAM    Verilog  SVA  ram.sv(73)       193 Covered   
/top/DUT/ram/ram_sva_inst/output_valid_coverage 
                                         ram_sva Verilog  SVA  ram_sva.sv(29)    93 Covered   
/top/DUT/ram/ram_sva_inst/output_invalid_coverage 
                                         ram_sva Verilog  SVA  ram_sva.sv(34)   276 Covered   
/top/DUT/ram/ram_sva_inst/output_constant_coverage 
                                         ram_sva Verilog  SVA  ram_sva.sv(39)  9209 Covered   

TOTAL DIRECTIVE COVERAGE: 100.00%  COVERS: 10

ASSERTION RESULTS:
--------------------------------------------------------------------
Name                 File(Line)                   Failure      Pass 
                                                  Count        Count
--------------------------------------------------------------------
/top/DUT/slave/slave_sva_inst/slave_not_selected_assertion
                     slave_sva.sv(68)                   0          1
/top/DUT/slave/slave_sva_inst/read_operation_assertion
                     slave_sva.sv(73)                   0          1
/top/DUT/slave/slave_sva_inst/write_addr_assertion
                     slave_sva.sv(78)                   0          1
/top/DUT/slave/slave_sva_inst/read_addr_assertion
                     slave_sva.sv(83)                   0          1
/top/DUT/slave/slave_sva_inst/write_data_assertion
                     slave_sva.sv(88)                   0          1
/top/DUT/slave/slave_sva_inst/reset_assertion
                     slave_sva.sv(94)                   0          1
/top/DUT/ram/address_updated_assertion
                     ram.sv(66)                         0          1
/top/DUT/ram/address_unchanged_assertion
                     ram.sv(71)                         0          1
/top/DUT/ram/ram_sva_inst/output_valid_assertion
                     ram_sva.sv(27)                     0          1
/top/DUT/ram/ram_sva_inst/output_invalid_assertion
                     ram_sva.sv(32)                     0          1
/top/DUT/ram/ram_sva_inst/output_constant_assertion
                     ram_sva.sv(37)                     0          1
/top/DUT/ram/ram_sva_inst/reset_assertion
                     ram_sva.sv(43)                     0          1
/wrapper_seq_pkg/wrapper_reset_seq/body/rst_rand
                     wrapper_seq.sv(18)                 0          1
/wrapper_seq_pkg/wrapper_main_seq/body/main_seq
                     wrapper_seq.sv(36)                 0          1

Total Coverage By Instance (filtered view): 86.88%

